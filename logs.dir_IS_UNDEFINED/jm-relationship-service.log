2019-03-13 19:43:24.146|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fe8d51b: startup date [Wed Mar 13 19:43:24 CST 2019]; root of context hierarchy
2019-03-13 19:43:24.394|INFO|org.hibernate.validator.internal.util.Version|background-preinit|<clinit>|30|HV000001: Hibernate Validator 5.3.6.Final
2019-03-13 19:43:24.450|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-13 19:43:24.503|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$74f24690] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:24.894|INFO|org.springframework.boot.SpringApplication|main|logStartupProfileInfo|593|No active profile set, falling back to default profiles: default
2019-03-13 19:43:24.914|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@20011bf: startup date [Wed Mar 13 19:43:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fe8d51b
2019-03-13 19:43:26.570|INFO|org.springframework.data.repository.config.RepositoryConfigurationDelegate|main|multipleStoresDetected|165|Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-13 19:43:26.905|INFO|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider|main|initAppId|93|App ID is set to jm-relationship-service-v1 by app.id property from /META-INF/app.properties
2019-03-13 19:43:26.907|INFO|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider|main|initEnvType|108|Environment is set to [dev] by JVM system property 'env'.
2019-03-13 19:43:27.104|INFO|org.springframework.cloud.context.scope.GenericScope|main|setSerializationId|288|BeanFactory id=a9a41c10-487e-3190-9c4f-d62443b95e03
2019-03-13 19:43:27.179|INFO|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider|main|initMetaServerAddress|42|Located meta services from apollo.meta configuration: http://172.16.175.22:8080!
2019-03-13 19:43:27.182|INFO|com.ctrip.framework.apollo.core.MetaDomainConsts|main|initMetaServerAddress|93|Located meta server address http://172.16.175.22:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-13 19:43:27.341|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-13 19:43:27.424|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmAppUserFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:27.425|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmIndustriesFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:27.617|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$5b3d89c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:27.789|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:27.801|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$58d84393] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:27.984|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'redisConfig' of type [com.sunfield.microframe.common.config.RedisConfig$$EnhancerBySpringCGLIB$$25991f7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.003|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$a1ea79b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.072|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$8b04e9d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.107|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$74f24690] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.127|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$986a1c59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.147|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$40bbefb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.173|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$56b0f12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.210|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth-org.springframework.cloud.sleuth.autoconfig.SleuthProperties' of type [org.springframework.cloud.sleuth.autoconfig.SleuthProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.215|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration' of type [org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration$$EnhancerBySpringCGLIB$$91d560a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.246|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultTraceSampler' of type [org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.247|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultTraceSampler' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.254|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'randomForSpanIds' of type [java.util.Random] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.268|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spanNamer' of type [org.springframework.cloud.sleuth.DefaultSpanNamer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.278|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration' of type [org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration$$EnhancerBySpringCGLIB$$df406a74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.291|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth.log.slf4j-org.springframework.cloud.sleuth.log.SleuthSlf4jProperties' of type [org.springframework.cloud.sleuth.log.SleuthSlf4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.299|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'slf4jSpanLogger' of type [org.springframework.cloud.sleuth.log.Slf4jSpanLogger] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.315|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultSpanAdjuster' of type [org.springframework.cloud.sleuth.NoOpSpanAdjuster] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.319|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$$EnhancerBySpringCGLIB$$cbedae94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.338|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig' of type [org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig$$EnhancerBySpringCGLIB$$b041be6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.352|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.servo.ServoMetricsAutoConfiguration' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$4f595239] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.374|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'servoMetricsConfig' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricsConfigBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.382|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'monitorRegistry' of type [com.netflix.servo.DefaultMonitorRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.390|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'servoMetricServices' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricServices] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.400|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration' of type [org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$7f624f74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.412|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthMetricProperties' of type [org.springframework.cloud.sleuth.metric.SleuthMetricProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.419|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spanReporterCounterService' of type [org.springframework.cloud.sleuth.metric.CounterServiceBasedSpanMetricReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.445|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.zipkin-org.springframework.cloud.sleuth.zipkin2.ZipkinProperties' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.517|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.com.codingapi.tx.TransactionConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.525|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.528|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.540|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.545|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$5624a36d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.572|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.587|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'loadBalancerClient' of type [org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.593|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$DiscoveryClientZipkinUrlExtractorConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$DiscoveryClientZipkinUrlExtractorConfiguration$$EnhancerBySpringCGLIB$$cca4e32c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.605|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'loadBalancerClientZipkinLoadBalancer' of type [org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.612|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinUrlExtractor' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.616|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$$EnhancerBySpringCGLIB$$3598749f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.628|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinRestTemplateCustomizer' of type [org.springframework.cloud.sleuth.zipkin2.DefaultZipkinRestTemplateCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.666|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'restTemplateSender' of type [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.704|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'reporter' of type [zipkin2.reporter.AsyncReporter$BoundedAsyncReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.735|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration$$EnhancerBySpringCGLIB$$f2dbf63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.775|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'serverProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.798|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$20860d17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.816|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.822|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.828|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration$$EnhancerBySpringCGLIB$$ab96f626] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.919|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinEndpointLocator' of type [org.springframework.cloud.sleuth.zipkin2.DefaultEndpointLocator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.936|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinSpanListener' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinSpanReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.956|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth.keys-org.springframework.cloud.sleuth.TraceKeys' of type [org.springframework.cloud.sleuth.TraceKeys] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.967|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthTracer' of type [org.springframework.cloud.sleuth.trace.DefaultTracer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.981|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration$$EnhancerBySpringCGLIB$$3f564ce2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:28.997|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'httpSpanInjector' of type [org.springframework.cloud.sleuth.instrument.web.ZipkinHttpSpanInjector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:29.008|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'httpTraceKeysInjector' of type [org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:29.016|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultErrorParser' of type [org.springframework.cloud.sleuth.ExceptionMessageErrorParser] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:29.025|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'traceRestTemplateInterceptor' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceRestTemplateInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:29.031|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration$$EnhancerBySpringCGLIB$$3485544] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:43:29.503|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|initialize|89|Tomcat initialized with port(s): 9402 (http)
2019-03-13 19:43:29.515|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting service [Tomcat]
2019-03-13 19:43:29.516|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting Servlet Engine: Apache Tomcat/8.5.27
2019-03-13 19:43:29.841|INFO|org.apache.juli.logging.DirectJDKLog|localhost-startStop-1|log|180|Initializing Spring embedded WebApplicationContext
2019-03-13 19:43:29.841|INFO|org.springframework.boot.context.embedded.EmbeddedWebApplicationContext|localhost-startStop-1|prepareEmbeddedWebApplicationContext|276|Root WebApplicationContext: initialization completed in 4927 ms
2019-03-13 19:43:30.605|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'metricsFilter' to: [/*]
2019-03-13 19:43:30.606|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-13 19:43:30.606|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'traceFilter' to: [/*]
2019-03-13 19:43:30.606|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-13 19:43:30.606|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-13 19:43:30.607|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'requestContextFilter' to: [/*]
2019-03-13 19:43:30.607|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019-03-13 19:43:30.607|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|271|Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-13 19:43:30.607|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'applicationContextIdFilter' to: [/*]
2019-03-13 19:43:30.607|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'statViewServlet' to [/druid/*]
2019-03-13 19:43:30.608|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'dispatcherServlet' to [/]
2019-03-13 19:43:31.299|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [protected final void com.alibaba.druid.pool.DruidDataSource.handleFatalError(com.alibaba.druid.pool.DruidPooledConnection,java.sql.SQLException,java.lang.String) throws java.sql.SQLException] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-13 19:43:31.300|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.decrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-13 19:43:31.301|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.incrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-13 19:43:31.727|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@337fb1a5: startup date [Wed Mar 13 19:43:31 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@20011bf
2019-03-13 19:43:31.743|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-13 19:43:32.329|WARN|org.springframework.context.support.AbstractApplicationContext|main|refresh|551|Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jmRelationshipFriendlifeRest': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jmRelationshipFriendlifeService': Unsatisfied dependency expressed through field 'jmAppUserFeignService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.sunfield.microframe.feign.JmAppUserFeignService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Method has too many Body parameters: public abstract com.sunfield.microframe.common.response.ResponseBean com.sunfield.microframe.feign.JmAppUserFeignService.findListByIdsAndNames(java.lang.String[],java.lang.String,java.lang.String,int,int)
2019-03-13 19:43:32.331|INFO|org.springframework.context.support.AbstractApplicationContext|main|doClose|984|Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@337fb1a5: startup date [Wed Mar 13 19:43:31 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@20011bf
2019-03-13 19:43:32.714|INFO|org.springframework.context.support.AbstractApplicationContext|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@74c04377}|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@22eb0f31: startup date [Wed Mar 13 19:43:32 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@20011bf
2019-03-13 19:43:32.782|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@74c04377}|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-13 19:43:32.829|WARN|org.springframework.context.support.AbstractApplicationContext|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@74c04377}|refresh|551|Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'clientConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaClientConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2019-03-13 19:43:32.830|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Stopping service [Tomcat]
2019-03-13 19:43:32.892|INFO|org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer|main|logAutoConfigurationReport|101|

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-03-13 19:43:32.949|ERROR|org.springframework.boot.SpringApplication|main|reportFailure|771|Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jmRelationshipFriendlifeRest': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jmRelationshipFriendlifeService': Unsatisfied dependency expressed through field 'jmAppUserFeignService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.sunfield.microframe.feign.JmAppUserFeignService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Method has too many Body parameters: public abstract com.sunfield.microframe.common.response.ResponseBean com.sunfield.microframe.feign.JmAppUserFeignService.findListByIdsAndNames(java.lang.String[],java.lang.String,java.lang.String,int,int)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.sunfield.microframe.ServiceApplication.main(ServiceApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jmRelationshipFriendlifeService': Unsatisfied dependency expressed through field 'jmAppUserFeignService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.sunfield.microframe.feign.JmAppUserFeignService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Method has too many Body parameters: public abstract com.sunfield.microframe.common.response.ResponseBean com.sunfield.microframe.feign.JmAppUserFeignService.findListByIdsAndNames(java.lang.String[],java.lang.String,java.lang.String,int,int)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.sunfield.microframe.feign.JmAppUserFeignService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Method has too many Body parameters: public abstract com.sunfield.microframe.common.response.ResponseBean com.sunfield.microframe.feign.JmAppUserFeignService.findListByIdsAndNames(java.lang.String[],java.lang.String,java.lang.String,int,int)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1101)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalStateException: Method has too many Body parameters: public abstract com.sunfield.microframe.common.response.ResponseBean com.sunfield.microframe.feign.JmAppUserFeignService.findListByIdsAndNames(java.lang.String[],java.lang.String,java.lang.String,int,int)
	at feign.Util.checkState(Util.java:128)
	at feign.Contract$BaseContract.parseAndValidateMetadata(Contract.java:114)
	at org.springframework.cloud.netflix.feign.support.SpringMvcContract.parseAndValidateMetadata(SpringMvcContract.java:133)
	at feign.Contract$BaseContract.parseAndValidatateMetadata(Contract.java:64)
	at feign.ReflectiveFeign$ParseHandlersByName.apply(ReflectiveFeign.java:146)
	at feign.ReflectiveFeign.newInstance(ReflectiveFeign.java:53)
	at feign.Feign$Builder.target(Feign.java:218)
	at org.springframework.cloud.netflix.feign.HystrixTargeter.target(HystrixTargeter.java:39)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:211)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:232)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 42 common frames omitted
2019-03-13 19:48:29.057|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@39c11e6c: startup date [Wed Mar 13 19:48:29 CST 2019]; root of context hierarchy
2019-03-13 19:48:29.330|INFO|org.hibernate.validator.internal.util.Version|background-preinit|<clinit>|30|HV000001: Hibernate Validator 5.3.6.Final
2019-03-13 19:48:29.392|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-13 19:48:29.451|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c6352425] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:29.841|INFO|org.springframework.boot.SpringApplication|main|logStartupProfileInfo|593|No active profile set, falling back to default profiles: default
2019-03-13 19:48:29.862|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@554cd74a: startup date [Wed Mar 13 19:48:29 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@39c11e6c
2019-03-13 19:48:31.485|INFO|org.springframework.data.repository.config.RepositoryConfigurationDelegate|main|multipleStoresDetected|165|Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-13 19:48:31.821|INFO|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider|main|initAppId|93|App ID is set to jm-relationship-service-v1 by app.id property from /META-INF/app.properties
2019-03-13 19:48:31.823|INFO|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider|main|initEnvType|108|Environment is set to [dev] by JVM system property 'env'.
2019-03-13 19:48:32.035|INFO|org.springframework.cloud.context.scope.GenericScope|main|setSerializationId|288|BeanFactory id=a9a41c10-487e-3190-9c4f-d62443b95e03
2019-03-13 19:48:32.106|INFO|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider|main|initMetaServerAddress|42|Located meta services from apollo.meta configuration: http://172.16.175.22:8080!
2019-03-13 19:48:32.109|INFO|com.ctrip.framework.apollo.core.MetaDomainConsts|main|initMetaServerAddress|93|Located meta server address http://172.16.175.22:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-13 19:48:32.248|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-13 19:48:32.354|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmAppUserFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:32.355|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmIndustriesFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:32.516|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$ac80675a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:32.682|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:32.695|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aa1b2128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:32.879|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'redisConfig' of type [com.sunfield.microframe.common.config.RedisConfig$$EnhancerBySpringCGLIB$$76dbfd0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:32.898|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f32d5746] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:32.967|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$dc47c769] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.003|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c6352425] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.026|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e9acf9ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.047|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$91fecd47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.072|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$56adeca7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.109|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth-org.springframework.cloud.sleuth.autoconfig.SleuthProperties' of type [org.springframework.cloud.sleuth.autoconfig.SleuthProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.116|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration' of type [org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration$$EnhancerBySpringCGLIB$$e3183e3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.146|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultTraceSampler' of type [org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.147|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultTraceSampler' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.154|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'randomForSpanIds' of type [java.util.Random] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.168|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spanNamer' of type [org.springframework.cloud.sleuth.DefaultSpanNamer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.177|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration' of type [org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration$$EnhancerBySpringCGLIB$$30834809] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.190|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth.log.slf4j-org.springframework.cloud.sleuth.log.SleuthSlf4jProperties' of type [org.springframework.cloud.sleuth.log.SleuthSlf4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.198|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'slf4jSpanLogger' of type [org.springframework.cloud.sleuth.log.Slf4jSpanLogger] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.212|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultSpanAdjuster' of type [org.springframework.cloud.sleuth.NoOpSpanAdjuster] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.216|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$$EnhancerBySpringCGLIB$$1d308c29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.234|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig' of type [org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig$$EnhancerBySpringCGLIB$$5c46f97b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.248|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.servo.ServoMetricsAutoConfiguration' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$a09c2fce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.271|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'servoMetricsConfig' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricsConfigBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.279|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'monitorRegistry' of type [com.netflix.servo.DefaultMonitorRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.287|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'servoMetricServices' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricServices] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.296|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration' of type [org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$d0a52d09] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.308|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthMetricProperties' of type [org.springframework.cloud.sleuth.metric.SleuthMetricProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.319|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spanReporterCounterService' of type [org.springframework.cloud.sleuth.metric.CounterServiceBasedSpanMetricReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.351|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.zipkin-org.springframework.cloud.sleuth.zipkin2.ZipkinProperties' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.419|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.com.codingapi.tx.TransactionConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.424|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.425|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.441|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.451|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$a7678102] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.480|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.494|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'loadBalancerClient' of type [org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.500|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$DiscoveryClientZipkinUrlExtractorConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$DiscoveryClientZipkinUrlExtractorConfiguration$$EnhancerBySpringCGLIB$$1de7c0c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.512|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'loadBalancerClientZipkinLoadBalancer' of type [org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.522|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinUrlExtractor' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.526|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$$EnhancerBySpringCGLIB$$86db5234] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.541|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinRestTemplateCustomizer' of type [org.springframework.cloud.sleuth.zipkin2.DefaultZipkinRestTemplateCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.595|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'restTemplateSender' of type [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.633|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'reporter' of type [zipkin2.reporter.AsyncReporter$BoundedAsyncReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.659|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration$$EnhancerBySpringCGLIB$$60709cf8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.686|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'serverProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.706|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$71c8eaac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.725|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.733|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.739|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration$$EnhancerBySpringCGLIB$$fcd9d3bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.842|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinEndpointLocator' of type [org.springframework.cloud.sleuth.zipkin2.DefaultEndpointLocator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.857|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinSpanListener' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinSpanReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.873|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth.keys-org.springframework.cloud.sleuth.TraceKeys' of type [org.springframework.cloud.sleuth.TraceKeys] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.881|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthTracer' of type [org.springframework.cloud.sleuth.trace.DefaultTracer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.894|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration$$EnhancerBySpringCGLIB$$90992a77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.912|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'httpSpanInjector' of type [org.springframework.cloud.sleuth.instrument.web.ZipkinHttpSpanInjector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.923|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'httpTraceKeysInjector' of type [org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.931|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultErrorParser' of type [org.springframework.cloud.sleuth.ExceptionMessageErrorParser] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.943|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'traceRestTemplateInterceptor' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceRestTemplateInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:33.952|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration$$EnhancerBySpringCGLIB$$548b32d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-13 19:48:34.401|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|initialize|89|Tomcat initialized with port(s): 9402 (http)
2019-03-13 19:48:34.412|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting service [Tomcat]
2019-03-13 19:48:34.413|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting Servlet Engine: Apache Tomcat/8.5.27
2019-03-13 19:48:34.738|INFO|org.apache.juli.logging.DirectJDKLog|localhost-startStop-1|log|180|Initializing Spring embedded WebApplicationContext
2019-03-13 19:48:34.738|INFO|org.springframework.boot.context.embedded.EmbeddedWebApplicationContext|localhost-startStop-1|prepareEmbeddedWebApplicationContext|276|Root WebApplicationContext: initialization completed in 4876 ms
2019-03-13 19:48:35.637|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'metricsFilter' to: [/*]
2019-03-13 19:48:35.638|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-13 19:48:35.638|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'traceFilter' to: [/*]
2019-03-13 19:48:35.638|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-13 19:48:35.639|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-13 19:48:35.639|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'requestContextFilter' to: [/*]
2019-03-13 19:48:35.639|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019-03-13 19:48:35.639|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|271|Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-13 19:48:35.639|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'applicationContextIdFilter' to: [/*]
2019-03-13 19:48:35.639|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'statViewServlet' to [/druid/*]
2019-03-13 19:48:35.641|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'dispatcherServlet' to [/]
2019-03-13 19:48:36.340|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [protected final void com.alibaba.druid.pool.DruidDataSource.handleFatalError(com.alibaba.druid.pool.DruidPooledConnection,java.sql.SQLException,java.lang.String) throws java.sql.SQLException] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-13 19:48:36.341|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.decrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-13 19:48:36.342|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.incrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-13 19:48:36.738|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@624be1d4: startup date [Wed Mar 13 19:48:36 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@554cd74a
2019-03-13 19:48:36.753|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-13 19:48:37.414|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6a7ab205: startup date [Wed Mar 13 19:48:37 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@554cd74a
2019-03-13 19:48:37.433|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-13 19:48:39.780|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.update(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.781|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.782|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.782|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.783|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.783|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.783|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOne(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.784|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.784|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.785|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.785|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/deleteSelf],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.deleteSelf(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-13 19:48:39.786|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupReject],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupReject(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-13 19:48:39.787|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupRequest(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-13 19:48:39.787|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupAgreed],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupAgreed(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-13 19:48:39.791|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.update(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.791|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.delete(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.791|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupAdd],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupAdd(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.792|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupOut],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupOut(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.792|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.793|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.findOne(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.793|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.793|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.794|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.794|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.794|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupCreate],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupCreate(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.795|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-13 19:48:39.796|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-13 19:48:39.796|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-13 19:48:39.798|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/removeFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.removeFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-13 19:48:39.798|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/agreeAsAFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.agreeAsAFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-13 19:48:39.799|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/addFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.addFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-13 19:48:39.799|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRecord],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.findFriendRecord(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-13 19:48:39.799|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriends],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriends(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-13 19:48:39.799|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendsPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendsPage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-13 19:48:39.800|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/rejectFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.rejectFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-13 19:48:39.800|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsite],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsite(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-13 19:48:39.801|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsitePage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsitePage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-13 19:48:39.803|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationship],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationship(com.sunfield.microframe.domain.JmAppUser)
2019-03-13 19:48:39.803|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationshipPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationshipPage(com.sunfield.microframe.domain.JmAppUser)
2019-03-13 19:48:39.803|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/allIndustryRelationshipList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.allIndustryRelationshipList(com.sunfield.microframe.domain.JmAppUser)
2019-03-13 19:48:39.806|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-13 19:48:39.807|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-13 19:48:39.809|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-13 19:48:39.812|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-13 19:48:39.812|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-13 19:48:39.905|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-13 19:48:39.905|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-13 19:48:39.910|INFO|com.netflix.config.DynamicPropertyFactory|main|getInstance|281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6413eeb7
2019-03-13 19:48:41.357|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-03-13 19:48:41.359|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.359|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019-03-13 19:48:41.360|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019-03-13 19:48:41.361|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019-03-13 19:48:41.361|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.361|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.363|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019-03-13 19:48:41.364|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019-03-13 19:48:41.365|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.367|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019-03-13 19:48:41.367|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019-03-13 19:48:41.368|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.369|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019-03-13 19:48:41.370|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.371|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019-03-13 19:48:41.371|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.372|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.373|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019-03-13 19:48:41.373|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.374|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.374|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019-03-13 19:48:41.375|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019-03-13 19:48:41.375|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.376|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-13 19:48:41.919|INFO|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping|main|initHandlerMethods|69|Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-13 19:48:42.329|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-13 19:48:42.329|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-13 19:48:42.680|INFO|org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter|main|initControllerAdviceCache|534|Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@554cd74a: startup date [Wed Mar 13 19:48:29 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@39c11e6c
2019-03-13 19:48:42.837|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-13 19:48:42.838|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-13 19:48:42.986|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-13 19:48:43.943|INFO|org.springframework.ui.freemarker.SpringTemplateLoader|main|<init>|61|SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@554cd74a: startup date [Wed Mar 13 19:48:29 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@39c11e6c] and template loader path [classpath:/templates/]
2019-03-13 19:48:43.944|INFO|org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer|main|postProcessTemplateLoaders|127|ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-13 19:48:44.716|INFO|org.springframework.scheduling.concurrent.ExecutorConfigurationSupport|main|initialize|165|Initializing ExecutorService 
2019-03-13 19:48:45.110|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-13 19:48:45.112|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'druidDataSource' has been autodetected for JMX exposure
2019-03-13 19:48:45.128|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-03-13 19:48:45.129|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019-03-13 19:48:45.130|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-03-13 19:48:45.130|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019-03-13 19:48:45.132|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-03-13 19:48:45.136|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-03-13 19:48:45.152|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019-03-13 19:48:45.160|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-03-13 19:48:45.177|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=554cd74a,type=ConfigurationPropertiesRebinder]
2019-03-13 19:48:45.184|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019-03-13 19:48:45.190|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|671|Located MBean 'druidDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=druidDataSource,type=DruidDataSource]
2019-03-13 19:48:45.215|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-13 19:48:45.234|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 0
2019-03-13 19:48:45.242|INFO|org.springframework.cloud.netflix.eureka.InstanceInfoFactory|main|create|71|Setting initial instance status as: STARTING
2019-03-13 19:48:45.278|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|347|Initializing Eureka in region us-east-1
2019-03-13 19:48:45.567|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|70|Using JSON encoding codec LegacyJacksonJson
2019-03-13 19:48:45.568|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|71|Using JSON decoding codec LegacyJacksonJson
2019-03-13 19:48:45.698|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|80|Using XML encoding codec XStreamXml
2019-03-13 19:48:45.699|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|81|Using XML decoding codec XStreamXml
2019-03-13 19:48:46.093|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|main|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-13 19:48:46.141|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|934|Disable delta property : false
2019-03-13 19:48:46.141|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|935|Single vip registry refresh property : null
2019-03-13 19:48:46.141|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|936|Force full registry fetch : false
2019-03-13 19:48:46.142|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|937|Application is null : false
2019-03-13 19:48:46.142|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|938|Registered Applications size is zero : true
2019-03-13 19:48:46.142|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|940|Application version is -1: true
2019-03-13 19:48:46.142|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1023|Getting all instance registry info from the eureka server
2019-03-13 19:48:46.324|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1032|The response status is 200
2019-03-13 19:48:46.326|INFO|com.netflix.discovery.DiscoveryClient|main|initScheduledTasks|1258|Starting heartbeat executor: renew interval is: 5
2019-03-13 19:48:46.328|INFO|com.netflix.discovery.InstanceInfoReplicator|main|<init>|59|InstanceInfoReplicator onDemand update allowed rate per min is 40
2019-03-13 19:48:46.333|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|434|Discovery Client initialized at timestamp 1552477726332 with initial instances count: 16
2019-03-13 19:48:46.383|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry|main|register|40|Registering application jm-relationship-service with eureka with status UP
2019-03-13 19:48:46.384|INFO|com.netflix.discovery.DiscoveryClient$3|main|notify|1293|Saw local status change event StatusChangeEvent [timestamp=1552477726384, current=UP, previous=STARTING]
2019-03-13 19:48:46.390|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|804|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402: registering service...
2019-03-13 19:48:46.400|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019-03-13 19:48:46.424|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019-03-13 19:48:46.437|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019-03-13 19:48:46.442|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019-03-13 19:48:46.445|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|813|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402 - registration status: 204
2019-03-13 19:48:46.446|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019-03-13 19:48:46.449|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019-03-13 19:48:46.452|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019-03-13 19:48:46.455|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019-03-13 19:48:46.460|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019-03-13 19:48:46.467|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019-03-13 19:48:46.470|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019-03-13 19:48:46.473|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019-03-13 19:48:46.476|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019-03-13 19:48:46.478|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019-03-13 19:48:46.480|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 2147483647
2019-03-13 19:48:46.480|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|151|Context refreshed
2019-03-13 19:48:46.874|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|154|Found 1 custom documentation plugin(s)
2019-03-13 19:48:46.906|INFO|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner|main|scan|41|Scanning for api listing references
2019-03-13 19:48:47.216|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_1
2019-03-13 19:48:47.230|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findListUsingPOST_1
2019-03-13 19:48:47.277|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findOneUsingPOST_1
2019-03-13 19:48:47.280|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findPageUsingPOST_1
2019-03-13 19:48:47.287|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: updateUsingPOST_1
2019-03-13 19:48:47.305|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_2
2019-03-13 19:48:47.307|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: insertUsingPOST_1
2019-03-13 19:48:47.367|INFO|org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration|main|start|138|Starting poller
2019-03-13 19:48:47.403|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Initializing ProtocolHandler ["http-nio-9402"]
2019-03-13 19:48:47.411|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting ProtocolHandler ["http-nio-9402"]
2019-03-13 19:48:47.423|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Using a shared selector for servlet write/read
2019-03-13 19:48:47.459|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|start|201|Tomcat started on port(s): 9402 (http)
2019-03-13 19:48:47.461|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration|main|onApplicationEvent|124|Updating port to 9402
2019-03-13 19:48:47.463|INFO|com.codingapi.tx.springcloud.listener.ServerListener|main|onApplicationEvent|24|onApplicationEvent -> onApplicationEvent. org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer@2e949007
2019-03-13 19:48:47.471|INFO|com.codingapi.tx.netty.service.TxManagerHttpRequestHelper|main|reloadHttpRequestService|47|load HttpRequestService .
2019-03-13 19:48:47.471|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|18|httpGet start
2019-03-13 19:48:47.551|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|20|httpGet end,res is {"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-13 19:48:47.551|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|43|get txManager ->{"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-13 19:48:47.553|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|57|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-13 19:48:47.553|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|59|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-13 19:48:47.661|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|main|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-13 19:48:47.738|INFO|com.codingapi.tx.listener.service.impl.InitServiceImpl|main|start|25|socket-start..
2019-03-13 19:48:47.751|INFO|org.springframework.boot.StartupInfoLogger|main|logStarted|57|Started ServiceApplication in 19.27 seconds (JVM running for 21.375)
2019-03-13 19:48:47.758|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-2-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@6e6f81b6
2019-03-13 19:48:50.014|INFO|com.alibaba.druid.pool.DruidDataSource|RMI TCP Connection(4)-127.0.0.1|init|947|{dataSource-1} inited
2019-03-13 19:48:52.786|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-1|sleepSend|84|send-msg->{"a":"umi","k":"j85ylHjM","p":{"u":"c7ac4fec47c88b5d51e499516c357ee3","i":"192.168.4.152:9402","m":"jm-relationship-service"}}
2019-03-13 19:49:30.458|INFO|org.apache.juli.logging.DirectJDKLog|http-nio-9402-exec-2|log|180|Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-13 19:49:30.459|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-9402-exec-2|initServletBean|489|FrameworkServlet 'dispatcherServlet': initialization started
2019-03-13 19:49:30.569|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-9402-exec-2|initServletBean|508|FrameworkServlet 'dispatcherServlet': initialization completed in 110 ms
2019-03-13 19:49:52.919|INFO|org.springframework.context.support.AbstractApplicationContext|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c176a11: startup date [Wed Mar 13 19:49:52 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@554cd74a
2019-03-13 19:49:52.979|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-13 19:49:53.135|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|checkAndFlip|115|Flipping property: 172.16.175.39.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-13 19:49:53.169|INFO|com.netflix.util.concurrent.ShutdownEnabledTimer|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|<init>|58|Shutdown hook installed for: NFLoadBalancer-PingTimer-172.16.175.39
2019-03-13 19:49:53.174|INFO|com.netflix.loadbalancer.BaseLoadBalancer|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|initWithConfig|192|Client: 172.16.175.39 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=172.16.175.39,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-13 19:49:53.184|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|enableAndInitLearnNewServersFeature|222|Using serverListUpdater PollingServerListUpdater
2019-03-13 19:49:53.191|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|restOfInit|150|DynamicServerListLoadBalancer for client 172.16.175.39 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=172.16.175.39,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@56444fec
2019-03-13 19:49:53.335|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|chooseServer|28|enter chooseServer method, key:default
2019-03-13 19:50:20.297|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-7|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:20.363|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:20.412|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:20.449|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|<==      Total: 3
2019-03-13 19:50:20.450|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:20.452|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:20.477|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|<==      Total: 3
2019-03-13 19:50:20.479|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-7|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:20.481|INFO|org.springframework.context.support.AbstractApplicationContext|http-nio-9402-exec-7|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@25d590a5: startup date [Wed Mar 13 19:50:20 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@554cd74a
2019-03-13 19:50:20.546|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|http-nio-9402-exec-7|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-13 19:50:20.712|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|http-nio-9402-exec-7|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-13 19:50:20.734|INFO|com.netflix.util.concurrent.ShutdownEnabledTimer|http-nio-9402-exec-7|<init>|58|Shutdown hook installed for: NFLoadBalancer-PingTimer-jm-user-service
2019-03-13 19:50:20.734|INFO|com.netflix.loadbalancer.BaseLoadBalancer|http-nio-9402-exec-7|initWithConfig|192|Client: jm-user-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-user-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-13 19:50:20.735|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|http-nio-9402-exec-7|enableAndInitLearnNewServersFeature|222|Using serverListUpdater PollingServerListUpdater
2019-03-13 19:50:20.749|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|http-nio-9402-exec-7|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-13 19:50:20.751|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|http-nio-9402-exec-7|restOfInit|150|DynamicServerListLoadBalancer for client jm-user-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-user-service,current list of Servers=[172.16.175.39:9200],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.16.175.39:9200;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@61993e4e
2019-03-13 19:50:20.935|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-7|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:21.231|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-7|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:920ms
2019-03-13 19:50:21.737|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|PollingServerListUpdater-0|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-13 19:50:26.834|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:26.836|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:26.838|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:26.864|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|<==      Total: 3
2019-03-13 19:50:26.866|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:26.867|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:26.893|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|<==      Total: 3
2019-03-13 19:50:26.894|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-3|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:26.894|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-3|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:26.934|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:99ms
2019-03-13 19:50:27.615|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-4|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:27.616|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:27.617|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:27.643|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|<==      Total: 3
2019-03-13 19:50:27.644|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:27.645|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:27.670|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|<==      Total: 3
2019-03-13 19:50:27.671|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-4|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:27.672|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-4|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:27.710|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-4|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:93ms
2019-03-13 19:50:27.839|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-1|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:27.840|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:27.841|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:27.866|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|<==      Total: 3
2019-03-13 19:50:27.867|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:27.869|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:27.894|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|<==      Total: 3
2019-03-13 19:50:27.895|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-1|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:27.896|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-1|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:27.936|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-1|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:96ms
2019-03-13 19:50:28.103|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-2|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:28.104|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:28.105|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:28.135|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|<==      Total: 3
2019-03-13 19:50:28.136|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:28.137|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:28.165|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|<==      Total: 3
2019-03-13 19:50:28.166|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-2|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:28.166|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-2|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:28.206|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-2|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:103ms
2019-03-13 19:50:28.370|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|chooseServer|28|enter chooseServer method, key:default
2019-03-13 19:50:28.475|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-8|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:28.476|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:28.477|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:28.500|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|<==      Total: 3
2019-03-13 19:50:28.501|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:28.502|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:28.528|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|<==      Total: 3
2019-03-13 19:50:28.528|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-8|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:28.529|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-8|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:28.570|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-8|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:95ms
2019-03-13 19:50:28.980|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-6|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:28.981|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:28.982|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:29.007|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|<==      Total: 3
2019-03-13 19:50:29.008|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:29.009|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:29.033|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|<==      Total: 3
2019-03-13 19:50:29.034|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-6|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:29.034|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-6|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:29.074|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-6|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:94ms
2019-03-13 19:50:29.646|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-10|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:29.648|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:29.650|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:29.675|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|<==      Total: 3
2019-03-13 19:50:29.677|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:29.679|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:29.704|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|<==      Total: 3
2019-03-13 19:50:29.706|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-10|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:29.706|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-10|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:29.751|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-10|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:104ms
2019-03-13 19:50:30.197|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-5|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:30.199|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:30.200|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:30.226|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|<==      Total: 3
2019-03-13 19:50:30.228|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:30.229|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:30.254|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|<==      Total: 3
2019-03-13 19:50:30.255|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-5|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:30.255|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-5|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:30.297|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-5|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:98ms
2019-03-13 19:50:30.874|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-7|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:30.875|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:30.877|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:30.903|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|<==      Total: 3
2019-03-13 19:50:30.904|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:30.905|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:30.931|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|<==      Total: 3
2019-03-13 19:50:30.932|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-7|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:30.933|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-7|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:30.970|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-7|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:96ms
2019-03-13 19:50:31.451|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-9|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:31.452|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:31.453|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:31.478|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|<==      Total: 3
2019-03-13 19:50:31.479|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:31.480|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:31.505|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|<==      Total: 3
2019-03-13 19:50:31.506|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-9|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:31.506|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-9|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:31.545|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-9|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:93ms
2019-03-13 19:50:32.653|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:32.654|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:32.656|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:32.681|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|<==      Total: 3
2019-03-13 19:50:32.682|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:32.683|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:32.707|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|<==      Total: 3
2019-03-13 19:50:32.708|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-3|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:32.709|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-3|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:32.950|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:296ms
2019-03-13 19:50:33.381|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|chooseServer|28|enter chooseServer method, key:default
2019-03-13 19:50:33.473|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-4|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:33.474|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:33.475|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:33.500|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|<==      Total: 3
2019-03-13 19:50:33.501|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:33.502|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:33.527|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|<==      Total: 3
2019-03-13 19:50:33.528|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-4|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:33.528|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-4|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:33.567|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-4|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:94ms
2019-03-13 19:50:35.555|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-2|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:35.556|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:35.557|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:35.581|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|<==      Total: 3
2019-03-13 19:50:35.582|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:35.583|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:35.607|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|<==      Total: 3
2019-03-13 19:50:35.608|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-2|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:35.609|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-2|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:35.645|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-2|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:89ms
2019-03-13 19:50:36.187|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-8|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:36.188|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:36.189|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:36.215|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|<==      Total: 3
2019-03-13 19:50:36.218|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:36.219|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:36.244|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|<==      Total: 3
2019-03-13 19:50:36.245|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-8|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:36.246|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-8|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:36.283|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-8|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:95ms
2019-03-13 19:50:36.743|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-6|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:36.744|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:36.745|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:36.775|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|<==      Total: 3
2019-03-13 19:50:36.777|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:36.777|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:36.801|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|<==      Total: 3
2019-03-13 19:50:36.802|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-6|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:36.803|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-6|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:36.840|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-6|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:97ms
2019-03-13 19:50:36.975|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-10|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:36.975|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:36.976|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:37.001|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|<==      Total: 3
2019-03-13 19:50:37.002|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:37.003|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:37.045|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|<==      Total: 3
2019-03-13 19:50:37.048|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-10|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:37.049|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-10|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:37.087|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-10|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:112ms
2019-03-13 19:50:37.401|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-5|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:37.402|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:37.403|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:37.428|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|<==      Total: 3
2019-03-13 19:50:37.430|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:37.431|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:37.455|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|<==      Total: 3
2019-03-13 19:50:37.456|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-5|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:37.457|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-5|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:37.497|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-5|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:95ms
2019-03-13 19:50:37.615|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-7|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:37.616|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:37.617|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:37.645|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|<==      Total: 3
2019-03-13 19:50:37.646|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:37.647|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:37.671|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|<==      Total: 3
2019-03-13 19:50:37.672|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-7|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:37.672|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-7|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:37.710|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-7|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:94ms
2019-03-13 19:50:37.848|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-9|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:37.848|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:37.849|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:37.874|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|<==      Total: 3
2019-03-13 19:50:37.875|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:37.876|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:37.900|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|<==      Total: 3
2019-03-13 19:50:37.902|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-9|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:37.903|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-9|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:37.941|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-9|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:93ms
2019-03-13 19:50:38.128|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:38.128|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:38.129|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:38.154|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|<==      Total: 3
2019-03-13 19:50:38.155|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:38.156|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:38.180|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|<==      Total: 3
2019-03-13 19:50:38.181|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-3|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:38.182|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-3|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:38.218|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:90ms
2019-03-13 19:50:38.468|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-4|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:38.470|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:38.471|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:38.497|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|<==      Total: 3
2019-03-13 19:50:38.499|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:38.500|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:38.525|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|<==      Total: 3
2019-03-13 19:50:38.526|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-4|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:38.526|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-4|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:38.563|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-4|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:93ms
2019-03-13 19:50:38.856|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-1|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:38.856|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:38.857|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:38.882|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|<==      Total: 3
2019-03-13 19:50:38.883|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:38.884|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:38.908|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|<==      Total: 3
2019-03-13 19:50:38.909|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-1|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:38.910|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-1|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:38.946|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-1|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:90ms
2019-03-13 19:50:39.263|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-2|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:39.264|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:39.265|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:39.289|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|<==      Total: 3
2019-03-13 19:50:39.290|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:39.291|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:39.314|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|<==      Total: 3
2019-03-13 19:50:39.315|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-2|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:39.316|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-2|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:39.353|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-2|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:89ms
2019-03-13 19:50:39.439|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc075da}|chooseServer|28|enter chooseServer method, key:default
2019-03-13 19:50:39.753|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-8|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:39.754|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:39.755|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:39.779|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|<==      Total: 3
2019-03-13 19:50:39.780|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:39.781|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:39.805|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|<==      Total: 3
2019-03-13 19:50:39.806|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-8|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:39.806|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-8|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:39.842|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-8|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:89ms
2019-03-13 19:50:39.934|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-6|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:39.934|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:39.935|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:39.959|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|<==      Total: 3
2019-03-13 19:50:39.960|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:39.961|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:39.985|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|<==      Total: 3
2019-03-13 19:50:39.986|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-6|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:39.986|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-6|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:40.023|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-6|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:89ms
2019-03-13 19:50:40.371|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-10|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:40.372|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:40.374|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:40.399|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|<==      Total: 3
2019-03-13 19:50:40.400|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:40.400|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:40.424|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|<==      Total: 3
2019-03-13 19:50:40.425|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-10|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:40.425|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-10|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:40.463|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-10|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:91ms
2019-03-13 19:50:40.553|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-5|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:40.554|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:40.555|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:40.579|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|<==      Total: 3
2019-03-13 19:50:40.581|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:40.582|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:40.606|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|<==      Total: 3
2019-03-13 19:50:40.607|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-5|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:40.607|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-5|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:40.644|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-5|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:90ms
2019-03-13 19:50:40.965|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-7|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:40.966|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:40.968|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:40.992|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|<==      Total: 3
2019-03-13 19:50:40.993|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:40.994|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:41.018|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-7|debug|145|<==      Total: 3
2019-03-13 19:50:41.019|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-7|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:41.020|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-7|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:41.057|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-7|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:92ms
2019-03-13 19:50:41.197|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-9|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:41.198|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:41.198|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:41.222|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|<==      Total: 3
2019-03-13 19:50:41.223|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:41.224|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:41.249|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|<==      Total: 3
2019-03-13 19:50:41.250|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-9|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:41.250|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-9|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:41.289|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-9|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:92ms
2019-03-13 19:50:41.408|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:41.409|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:41.413|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:41.439|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|<==      Total: 3
2019-03-13 19:50:41.440|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:41.441|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:41.465|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-3|debug|145|<==      Total: 3
2019-03-13 19:50:41.466|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-3|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:41.466|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-3|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:41.505|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:97ms
2019-03-13 19:50:41.603|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-4|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:41.604|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:41.604|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:41.628|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|<==      Total: 3
2019-03-13 19:50:41.629|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:41.630|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:41.655|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-4|debug|145|<==      Total: 3
2019-03-13 19:50:41.656|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-4|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:41.656|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-4|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:41.697|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-4|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:93ms
2019-03-13 19:50:41.789|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-1|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:41.789|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:41.790|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:41.815|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|<==      Total: 3
2019-03-13 19:50:41.816|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:41.816|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:41.840|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-1|debug|145|<==      Total: 3
2019-03-13 19:50:41.841|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-1|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:41.842|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-1|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:41.881|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-1|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:92ms
2019-03-13 19:50:42.003|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-2|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:42.004|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:42.005|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:42.031|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|<==      Total: 3
2019-03-13 19:50:42.032|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:42.033|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:42.058|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-2|debug|145|<==      Total: 3
2019-03-13 19:50:42.059|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-2|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:42.059|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-2|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:42.098|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-2|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:94ms
2019-03-13 19:50:42.699|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-8|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:42.700|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:42.702|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:42.727|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|<==      Total: 3
2019-03-13 19:50:42.728|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:42.728|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:42.753|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-8|debug|145|<==      Total: 3
2019-03-13 19:50:42.753|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-8|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:42.754|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-8|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:42.791|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-8|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:91ms
2019-03-13 19:50:43.308|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-6|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:43.309|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:43.311|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:43.335|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|<==      Total: 3
2019-03-13 19:50:43.336|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:43.337|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:43.361|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-6|debug|145|<==      Total: 3
2019-03-13 19:50:43.362|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-6|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:43.362|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-6|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:43.402|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-6|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:94ms
2019-03-13 19:50:43.662|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-10|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:43.663|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:43.664|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:43.688|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|<==      Total: 3
2019-03-13 19:50:43.689|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:43.690|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:43.714|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-10|debug|145|<==      Total: 3
2019-03-13 19:50:43.715|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-10|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:43.715|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-10|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:43.753|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-10|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:90ms
2019-03-13 19:50:44.109|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-5|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:44.109|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:44.110|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:44.134|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|<==      Total: 3
2019-03-13 19:50:44.135|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:44.136|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:44.162|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-5|debug|145|<==      Total: 3
2019-03-13 19:50:44.163|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-5|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:44.163|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-5|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:44.202|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-5|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:93ms
2019-03-13 19:50:44.291|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-9|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage PARAMS:[{"createBy":"string","createDate":"2019-03-13 19:49:51","id":"string","pageNumber":1,"pageSize":1110,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":"2019-03-13 19:49:51","userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-13 19:50:44.292|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) 
2019-03-13 19:50:44.293|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:44.318|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|<==      Total: 3
2019-03-13 19:50:44.319|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (status = '0') AND (type = 0 or type = 1) LIMIT 0, 1110 
2019-03-13 19:50:44.320|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|==> Parameters: 0cbc9604001046299c9b58fc397a6cfa(String)
2019-03-13 19:50:44.344|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-9402-exec-9|debug|145|<==      Total: 3
2019-03-13 19:50:44.345|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-9|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-13 19:50:44.345|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-9|chooseServer|28|enter chooseServer method, key:null
2019-03-13 19:50:44.386|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-9|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriendsPage RETURN:{"data":{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":null,"expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":"e1b1e94f35a64d3bacbf65582af35b66","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"microsoft","createBy":null,"createDate":null,"expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190311/20181119_20226716350.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":12,"memberStartTime":null,"memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"chengxuyuan程序员","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","relationType":null,"remarks":null,"scoreNum":22,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":null,"expertStatus":0,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190313104529_001330.jpg","id":"bc4b078c1d6d484bbf4eba1aea6b1596","industry":"1","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"11111111111","nickName":"ysfg","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"YyK1JJQi0CSCW9oaZmqH4/p/+5D91hweWmGJXyofUphUgICUsWDXz6yaNhQW8sOXBJE0MA8KxW+Wb6f9Rju6volkWW5vv/bsFYeK7oUvHOwmeVS7OoSJiaxwV+ZHmUMBOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":null,"wxNickName":null,"wxOpenId":null}],"pageNumber":1,"pageSize":1110,"totalNum":3,"totalPage":1},"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:94ms
2019-03-14 10:19:37.761|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|814|null
2019-03-14 10:19:57.785|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|814|---------------------null
2019-03-14 10:20:43.246|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|814|---------------------1-null
2019-03-14 10:20:43.252|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|816|---------------------2-null
2019-03-14 10:22:06.678|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|815|---------------------1-null
2019-03-14 10:22:06.685|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|817|---------------------2-null
2019-03-14 10:22:06.685|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|819|key->null,value->null
2019-03-14 10:22:26.099|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|815|---------------------1-null
2019-03-14 10:22:26.105|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|819|---------------------2-null
2019-03-14 10:22:26.106|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|821|key->null,value->null
2019-03-14 10:24:26.498|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|815|---------------------1-null
2019-03-14 10:24:26.502|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|819|---------------------2-null
2019-03-14 10:24:26.502|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|820|---------------------3-null
2019-03-14 10:24:26.502|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|821|---------------------4-null
2019-03-14 10:24:26.502|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|823|key->null,value->null
2019-03-14 16:25:52.204|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|939|---------------------1-null
2019-03-14 16:25:52.238|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|943|---------------------2-null
2019-03-14 16:25:52.239|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|944|---------------------3-null
2019-03-14 16:25:52.239|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|945|---------------------4-null
2019-03-14 16:25:52.239|INFO|com.sunfield.microframe.service.impl.RelationshipServiceImpl|main|main|947|key->null,value->null
2019-03-14 16:26:24.181|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7249dadf: startup date [Thu Mar 14 16:26:24 CST 2019]; root of context hierarchy
2019-03-14 16:26:24.407|INFO|org.hibernate.validator.internal.util.Version|background-preinit|<clinit>|30|HV000001: Hibernate Validator 5.3.6.Final
2019-03-14 16:26:24.471|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:26:24.561|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f1c5ef91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:25.041|INFO|org.springframework.boot.SpringApplication|main|logStartupProfileInfo|593|No active profile set, falling back to default profiles: default
2019-03-14 16:26:25.063|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c48fe92: startup date [Thu Mar 14 16:26:25 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7249dadf
2019-03-14 16:26:26.653|INFO|org.springframework.data.repository.config.RepositoryConfigurationDelegate|main|multipleStoresDetected|165|Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 16:26:26.968|INFO|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider|main|initAppId|93|App ID is set to jm-relationship-service-v1 by app.id property from /META-INF/app.properties
2019-03-14 16:26:26.970|INFO|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider|main|initEnvType|108|Environment is set to [dev] by JVM system property 'env'.
2019-03-14 16:26:27.181|INFO|org.springframework.cloud.context.scope.GenericScope|main|setSerializationId|288|BeanFactory id=a9a41c10-487e-3190-9c4f-d62443b95e03
2019-03-14 16:26:27.245|INFO|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider|main|initMetaServerAddress|42|Located meta services from apollo.meta configuration: http://172.16.175.22:8080!
2019-03-14 16:26:27.248|INFO|com.ctrip.framework.apollo.core.MetaDomainConsts|main|initMetaServerAddress|93|Located meta server address http://172.16.175.22:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-14 16:26:27.378|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:26:27.459|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmAppUserFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:27.460|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmIndustriesFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:27.623|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$d81132c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:27.805|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:27.817|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d5abec94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:27.987|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'redisConfig' of type [com.sunfield.microframe.common.config.RedisConfig$$EnhancerBySpringCGLIB$$a26cc87b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.007|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1ebe22b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.078|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$7d892d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.111|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f1c5ef91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.131|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$153dc55a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.150|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$bd8f98b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.174|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$823eb813] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.204|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth-org.springframework.cloud.sleuth.autoconfig.SleuthProperties' of type [org.springframework.cloud.sleuth.autoconfig.SleuthProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.208|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration' of type [org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration$$EnhancerBySpringCGLIB$$ea909a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.239|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultTraceSampler' of type [org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.240|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultTraceSampler' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.248|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'randomForSpanIds' of type [java.util.Random] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.261|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spanNamer' of type [org.springframework.cloud.sleuth.DefaultSpanNamer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.269|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration' of type [org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration$$EnhancerBySpringCGLIB$$5c141375] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.282|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth.log.slf4j-org.springframework.cloud.sleuth.log.SleuthSlf4jProperties' of type [org.springframework.cloud.sleuth.log.SleuthSlf4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.289|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'slf4jSpanLogger' of type [org.springframework.cloud.sleuth.log.Slf4jSpanLogger] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.302|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultSpanAdjuster' of type [org.springframework.cloud.sleuth.NoOpSpanAdjuster] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.306|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$$EnhancerBySpringCGLIB$$48c15795] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.322|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig' of type [org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig$$EnhancerBySpringCGLIB$$87d7c4e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.335|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.servo.ServoMetricsAutoConfiguration' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$cc2cfb3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.356|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'servoMetricsConfig' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricsConfigBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.363|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'monitorRegistry' of type [com.netflix.servo.DefaultMonitorRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.371|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'servoMetricServices' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricServices] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.379|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration' of type [org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$fc35f875] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.391|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthMetricProperties' of type [org.springframework.cloud.sleuth.metric.SleuthMetricProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.398|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spanReporterCounterService' of type [org.springframework.cloud.sleuth.metric.CounterServiceBasedSpanMetricReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.415|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.zipkin-org.springframework.cloud.sleuth.zipkin2.ZipkinProperties' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.473|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.com.codingapi.tx.TransactionConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.478|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.486|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.496|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.504|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$d2f84c6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.539|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.554|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'loadBalancerClient' of type [org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.559|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$DiscoveryClientZipkinUrlExtractorConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$DiscoveryClientZipkinUrlExtractorConfiguration$$EnhancerBySpringCGLIB$$49788c2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.572|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'loadBalancerClientZipkinLoadBalancer' of type [org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.578|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinUrlExtractor' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.582|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$$EnhancerBySpringCGLIB$$b26c1da0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.769|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinRestTemplateCustomizer' of type [org.springframework.cloud.sleuth.zipkin2.DefaultZipkinRestTemplateCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.797|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'restTemplateSender' of type [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.815|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'reporter' of type [zipkin2.reporter.AsyncReporter$BoundedAsyncReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.832|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration$$EnhancerBySpringCGLIB$$8c016864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.856|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'serverProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.874|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$9d59b618] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.890|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.895|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.900|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration$$EnhancerBySpringCGLIB$$286a9f27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.958|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinEndpointLocator' of type [org.springframework.cloud.sleuth.zipkin2.DefaultEndpointLocator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.968|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinSpanListener' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinSpanReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.981|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth.keys-org.springframework.cloud.sleuth.TraceKeys' of type [org.springframework.cloud.sleuth.TraceKeys] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:28.990|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthTracer' of type [org.springframework.cloud.sleuth.trace.DefaultTracer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:29.008|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration$$EnhancerBySpringCGLIB$$bc29f5e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:29.036|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'httpSpanInjector' of type [org.springframework.cloud.sleuth.instrument.web.ZipkinHttpSpanInjector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:29.056|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'httpTraceKeysInjector' of type [org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:29.066|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultErrorParser' of type [org.springframework.cloud.sleuth.ExceptionMessageErrorParser] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:29.080|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'traceRestTemplateInterceptor' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceRestTemplateInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:29.090|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration$$EnhancerBySpringCGLIB$$801bfe45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:26:29.511|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|initialize|89|Tomcat initialized with port(s): 9402 (http)
2019-03-14 16:26:29.520|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting service [Tomcat]
2019-03-14 16:26:29.521|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting Servlet Engine: Apache Tomcat/8.5.27
2019-03-14 16:26:29.794|INFO|org.apache.juli.logging.DirectJDKLog|localhost-startStop-1|log|180|Initializing Spring embedded WebApplicationContext
2019-03-14 16:26:29.795|INFO|org.springframework.boot.context.embedded.EmbeddedWebApplicationContext|localhost-startStop-1|prepareEmbeddedWebApplicationContext|276|Root WebApplicationContext: initialization completed in 4732 ms
2019-03-14 16:26:30.572|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'metricsFilter' to: [/*]
2019-03-14 16:26:30.573|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 16:26:30.573|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'traceFilter' to: [/*]
2019-03-14 16:26:30.573|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 16:26:30.574|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 16:26:30.574|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 16:26:30.574|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019-03-14 16:26:30.574|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|271|Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 16:26:30.574|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'applicationContextIdFilter' to: [/*]
2019-03-14 16:26:30.574|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'statViewServlet' to [/druid/*]
2019-03-14 16:26:30.575|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'dispatcherServlet' to [/]
2019-03-14 16:26:31.221|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [protected final void com.alibaba.druid.pool.DruidDataSource.handleFatalError(com.alibaba.druid.pool.DruidPooledConnection,java.sql.SQLException,java.lang.String) throws java.sql.SQLException] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-14 16:26:31.222|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.decrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-14 16:26:31.222|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.incrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-14 16:26:31.595|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@328bc067: startup date [Thu Mar 14 16:26:31 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c48fe92
2019-03-14 16:26:31.608|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:26:32.225|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@75507e68: startup date [Thu Mar 14 16:26:32 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c48fe92
2019-03-14 16:26:32.242|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:26:33.285|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.update(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.287|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.287|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.287|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.288|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.288|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.289|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOne(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.289|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.289|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.291|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.291|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/deleteSelf],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.deleteSelf(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:26:33.292|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupReject],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupReject(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-14 16:26:33.293|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupRequest(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-14 16:26:33.293|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupAgreed],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupAgreed(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-14 16:26:33.297|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.update(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.297|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.delete(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.297|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.298|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupAdd],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupAdd(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.298|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupOut],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupOut(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.299|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.299|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.findOne(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.299|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.300|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.300|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.300|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.301|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupCreate],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupCreate(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:26:33.301|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-14 16:26:33.302|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-14 16:26:33.304|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsitePage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsitePage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:26:33.304|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationship],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationship(com.sunfield.microframe.domain.JmAppUser)
2019-03-14 16:26:33.304|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationshipPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationshipPage(com.sunfield.microframe.domain.JmAppUser)
2019-03-14 16:26:33.305|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/allIndustryRelationshipList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.allIndustryRelationshipList(com.sunfield.microframe.domain.JmAppUser)
2019-03-14 16:26:33.305|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/rejectFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.rejectFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:26:33.305|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsite],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsite(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:26:33.306|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/removeFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.removeFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:26:33.306|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/agreeAsAFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.agreeAsAFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:26:33.306|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/addFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.addFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:26:33.309|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRecord],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.findFriendRecord(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:26:33.309|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriends],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriends(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:26:33.309|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendsPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendsPage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:26:33.310|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/achieveNotebook],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.achieveNotebook(com.sunfield.microframe.params.NoteBook)
2019-03-14 16:26:33.313|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 16:26:33.314|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 16:26:33.314|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 16:26:33.317|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-14 16:26:33.318|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 16:26:33.407|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-14 16:26:33.407|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-14 16:26:33.412|INFO|com.netflix.config.DynamicPropertyFactory|main|getInstance|281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5749e633
2019-03-14 16:26:34.719|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019-03-14 16:26:34.720|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.721|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.722|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019-03-14 16:26:34.722|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.722|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.723|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.723|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.724|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019-03-14 16:26:34.724|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019-03-14 16:26:34.725|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.726|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019-03-14 16:26:34.727|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019-03-14 16:26:34.727|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.727|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019-03-14 16:26:34.728|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019-03-14 16:26:34.729|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019-03-14 16:26:34.730|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019-03-14 16:26:34.730|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.730|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019-03-14 16:26:34.731|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019-03-14 16:26:34.732|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.732|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:34.733|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-03-14 16:26:34.733|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:26:35.168|INFO|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping|main|initHandlerMethods|69|Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-14 16:26:35.596|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-14 16:26:35.596|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-14 16:26:35.925|INFO|org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter|main|initControllerAdviceCache|534|Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c48fe92: startup date [Thu Mar 14 16:26:25 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7249dadf
2019-03-14 16:26:36.075|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 16:26:36.075|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 16:26:36.215|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 16:26:37.116|INFO|org.springframework.ui.freemarker.SpringTemplateLoader|main|<init>|61|SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c48fe92: startup date [Thu Mar 14 16:26:25 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7249dadf] and template loader path [classpath:/templates/]
2019-03-14 16:26:37.117|INFO|org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer|main|postProcessTemplateLoaders|127|ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-14 16:26:37.821|INFO|org.springframework.scheduling.concurrent.ExecutorConfigurationSupport|main|initialize|165|Initializing ExecutorService 
2019-03-14 16:26:38.202|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-14 16:26:38.204|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'druidDataSource' has been autodetected for JMX exposure
2019-03-14 16:26:38.219|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-03-14 16:26:38.220|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019-03-14 16:26:38.220|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-03-14 16:26:38.221|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019-03-14 16:26:38.223|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-03-14 16:26:38.226|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-03-14 16:26:38.241|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019-03-14 16:26:38.249|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-03-14 16:26:38.265|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4c48fe92,type=ConfigurationPropertiesRebinder]
2019-03-14 16:26:38.271|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019-03-14 16:26:38.276|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|671|Located MBean 'druidDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=druidDataSource,type=DruidDataSource]
2019-03-14 16:26:38.300|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-14 16:26:38.317|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 0
2019-03-14 16:26:38.324|INFO|org.springframework.cloud.netflix.eureka.InstanceInfoFactory|main|create|71|Setting initial instance status as: STARTING
2019-03-14 16:26:38.358|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|347|Initializing Eureka in region us-east-1
2019-03-14 16:26:38.627|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|70|Using JSON encoding codec LegacyJacksonJson
2019-03-14 16:26:38.628|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|71|Using JSON decoding codec LegacyJacksonJson
2019-03-14 16:26:38.753|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|80|Using XML encoding codec XStreamXml
2019-03-14 16:26:38.754|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|81|Using XML decoding codec XStreamXml
2019-03-14 16:26:39.054|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|main|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 16:26:39.101|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|934|Disable delta property : false
2019-03-14 16:26:39.101|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|935|Single vip registry refresh property : null
2019-03-14 16:26:39.101|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|936|Force full registry fetch : false
2019-03-14 16:26:39.101|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|937|Application is null : false
2019-03-14 16:26:39.101|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|938|Registered Applications size is zero : true
2019-03-14 16:26:39.102|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|940|Application version is -1: true
2019-03-14 16:26:39.102|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1023|Getting all instance registry info from the eureka server
2019-03-14 16:26:39.271|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1032|The response status is 200
2019-03-14 16:26:39.273|INFO|com.netflix.discovery.DiscoveryClient|main|initScheduledTasks|1258|Starting heartbeat executor: renew interval is: 5
2019-03-14 16:26:39.275|INFO|com.netflix.discovery.InstanceInfoReplicator|main|<init>|59|InstanceInfoReplicator onDemand update allowed rate per min is 40
2019-03-14 16:26:39.278|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|434|Discovery Client initialized at timestamp 1552551999278 with initial instances count: 19
2019-03-14 16:26:39.320|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry|main|register|40|Registering application jm-relationship-service with eureka with status UP
2019-03-14 16:26:39.321|INFO|com.netflix.discovery.DiscoveryClient$3|main|notify|1293|Saw local status change event StatusChangeEvent [timestamp=1552551999321, current=UP, previous=STARTING]
2019-03-14 16:26:39.324|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|804|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402: registering service...
2019-03-14 16:26:39.335|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019-03-14 16:26:39.352|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019-03-14 16:26:39.714|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019-03-14 16:26:39.717|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019-03-14 16:26:39.721|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019-03-14 16:26:39.721|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|813|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402 - registration status: 204
2019-03-14 16:26:39.724|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019-03-14 16:26:39.727|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019-03-14 16:26:39.729|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019-03-14 16:26:39.733|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019-03-14 16:26:39.739|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019-03-14 16:26:39.742|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019-03-14 16:26:39.745|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019-03-14 16:26:39.747|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019-03-14 16:26:39.750|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019-03-14 16:26:39.751|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 2147483647
2019-03-14 16:26:39.751|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|151|Context refreshed
2019-03-14 16:26:39.759|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|154|Found 1 custom documentation plugin(s)
2019-03-14 16:26:39.789|INFO|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner|main|scan|41|Scanning for api listing references
2019-03-14 16:26:40.114|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_1
2019-03-14 16:26:40.127|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findListUsingPOST_1
2019-03-14 16:26:40.171|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findOneUsingPOST_1
2019-03-14 16:26:40.173|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findPageUsingPOST_1
2019-03-14 16:26:40.181|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: updateUsingPOST_1
2019-03-14 16:26:40.197|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_2
2019-03-14 16:26:40.199|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: insertUsingPOST_1
2019-03-14 16:26:40.258|INFO|org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration|main|start|138|Starting poller
2019-03-14 16:26:40.292|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Initializing ProtocolHandler ["http-nio-9402"]
2019-03-14 16:26:40.300|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting ProtocolHandler ["http-nio-9402"]
2019-03-14 16:26:40.311|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Using a shared selector for servlet write/read
2019-03-14 16:26:40.339|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|start|201|Tomcat started on port(s): 9402 (http)
2019-03-14 16:26:40.340|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration|main|onApplicationEvent|124|Updating port to 9402
2019-03-14 16:26:40.341|INFO|com.codingapi.tx.springcloud.listener.ServerListener|main|onApplicationEvent|24|onApplicationEvent -> onApplicationEvent. org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer@2295535f
2019-03-14 16:26:40.347|INFO|com.codingapi.tx.netty.service.TxManagerHttpRequestHelper|main|reloadHttpRequestService|47|load HttpRequestService .
2019-03-14 16:26:40.348|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|18|httpGet start
2019-03-14 16:26:40.416|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|20|httpGet end,res is {"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-14 16:26:40.417|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|43|get txManager ->{"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-14 16:26:40.423|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|57|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-14 16:26:40.424|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|59|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-14 16:26:40.531|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|main|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-14 16:26:40.576|INFO|com.codingapi.tx.listener.service.impl.InitServiceImpl|main|start|25|socket-start..
2019-03-14 16:26:40.586|INFO|org.springframework.boot.StartupInfoLogger|main|logStarted|57|Started ServiceApplication in 16.996 seconds (JVM running for 18.839)
2019-03-14 16:26:40.600|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-2-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@178fb2e0
2019-03-14 16:26:42.832|INFO|com.alibaba.druid.pool.DruidDataSource|RMI TCP Connection(7)-127.0.0.1|init|947|{dataSource-1} inited
2019-03-14 16:26:45.644|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-1|sleepSend|84|send-msg->{"a":"umi","k":"4SELuM4t","p":{"u":"c7ac4fec47c88b5d51e499516c357ee3","i":"192.168.4.152:9402","m":"jm-relationship-service"}}
2019-03-14 16:28:29.075|INFO|org.apache.juli.logging.DirectJDKLog|http-nio-9402-exec-1|log|180|Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 16:28:29.076|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-9402-exec-1|initServletBean|489|FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 16:28:29.139|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-9402-exec-1|initServletBean|508|FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-03-14 16:28:30.882|INFO|org.springframework.context.support.AbstractApplicationContext|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@582c1f8d}|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@311855d4: startup date [Thu Mar 14 16:28:30 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c48fe92
2019-03-14 16:28:30.953|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@582c1f8d}|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:28:31.107|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@582c1f8d}|checkAndFlip|115|Flipping property: 172.16.175.39.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 16:28:31.129|INFO|com.netflix.util.concurrent.ShutdownEnabledTimer|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@582c1f8d}|<init>|58|Shutdown hook installed for: NFLoadBalancer-PingTimer-172.16.175.39
2019-03-14 16:28:31.133|INFO|com.netflix.loadbalancer.BaseLoadBalancer|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@582c1f8d}|initWithConfig|192|Client: 172.16.175.39 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=172.16.175.39,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-14 16:28:31.139|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@582c1f8d}|enableAndInitLearnNewServersFeature|222|Using serverListUpdater PollingServerListUpdater
2019-03-14 16:28:31.144|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@582c1f8d}|restOfInit|150|DynamicServerListLoadBalancer for client 172.16.175.39 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=172.16.175.39,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@79769915
2019-03-14 16:28:31.255|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@582c1f8d}|chooseServer|28|enter chooseServer method, key:default
2019-03-14 16:30:31.940|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ce1f601: startup date [Thu Mar 14 16:30:31 CST 2019]; root of context hierarchy
2019-03-14 16:30:32.167|INFO|org.hibernate.validator.internal.util.Version|background-preinit|<clinit>|30|HV000001: Hibernate Validator 5.3.6.Final
2019-03-14 16:30:32.213|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:30:32.263|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$636ac4d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:32.630|INFO|org.springframework.boot.SpringApplication|main|logStartupProfileInfo|593|No active profile set, falling back to default profiles: default
2019-03-14 16:30:32.648|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2b58c0: startup date [Thu Mar 14 16:30:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ce1f601
2019-03-14 16:30:34.220|INFO|org.springframework.data.repository.config.RepositoryConfigurationDelegate|main|multipleStoresDetected|165|Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 16:30:34.521|INFO|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider|main|initAppId|93|App ID is set to jm-relationship-service-v1 by app.id property from /META-INF/app.properties
2019-03-14 16:30:34.523|INFO|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider|main|initEnvType|108|Environment is set to [dev] by JVM system property 'env'.
2019-03-14 16:30:34.708|INFO|org.springframework.cloud.context.scope.GenericScope|main|setSerializationId|288|BeanFactory id=a9a41c10-487e-3190-9c4f-d62443b95e03
2019-03-14 16:30:34.779|INFO|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider|main|initMetaServerAddress|42|Located meta services from apollo.meta configuration: http://172.16.175.22:8080!
2019-03-14 16:30:34.782|INFO|com.ctrip.framework.apollo.core.MetaDomainConsts|main|initMetaServerAddress|93|Located meta server address http://172.16.175.22:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-14 16:30:34.912|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:30:34.993|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmAppUserFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:34.995|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmIndustriesFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.158|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$49b6080a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.319|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.331|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4750c1d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.499|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'redisConfig' of type [com.sunfield.microframe.common.config.RedisConfig$$EnhancerBySpringCGLIB$$14119dbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.517|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$9062f7f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.584|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$797d6819] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.618|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$636ac4d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.639|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$86e29a9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.657|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$2f346df7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.681|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$f3e38d57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.711|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth-org.springframework.cloud.sleuth.autoconfig.SleuthProperties' of type [org.springframework.cloud.sleuth.autoconfig.SleuthProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.715|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration' of type [org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration$$EnhancerBySpringCGLIB$$804ddeeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.742|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultTraceSampler' of type [org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.742|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultTraceSampler' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.749|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'randomForSpanIds' of type [java.util.Random] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.761|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spanNamer' of type [org.springframework.cloud.sleuth.DefaultSpanNamer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.770|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration' of type [org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration$$EnhancerBySpringCGLIB$$cdb8e8b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.783|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth.log.slf4j-org.springframework.cloud.sleuth.log.SleuthSlf4jProperties' of type [org.springframework.cloud.sleuth.log.SleuthSlf4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.792|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'slf4jSpanLogger' of type [org.springframework.cloud.sleuth.log.Slf4jSpanLogger] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.807|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultSpanAdjuster' of type [org.springframework.cloud.sleuth.NoOpSpanAdjuster] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.812|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$$EnhancerBySpringCGLIB$$ba662cd9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.829|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig' of type [org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig$$EnhancerBySpringCGLIB$$f97c9a2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.843|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.servo.ServoMetricsAutoConfiguration' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$3dd1d07e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.866|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'servoMetricsConfig' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricsConfigBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.875|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'monitorRegistry' of type [com.netflix.servo.DefaultMonitorRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.884|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'servoMetricServices' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricServices] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.893|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration' of type [org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$6ddacdb9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.905|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthMetricProperties' of type [org.springframework.cloud.sleuth.metric.SleuthMetricProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.913|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spanReporterCounterService' of type [org.springframework.cloud.sleuth.metric.CounterServiceBasedSpanMetricReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.930|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.zipkin-org.springframework.cloud.sleuth.zipkin2.ZipkinProperties' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.965|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.com.codingapi.tx.TransactionConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.968|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.969|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.976|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:35.980|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$449d21b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.003|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.017|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'loadBalancerClient' of type [org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.022|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$DiscoveryClientZipkinUrlExtractorConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$DiscoveryClientZipkinUrlExtractorConfiguration$$EnhancerBySpringCGLIB$$bb1d6171] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.034|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'loadBalancerClientZipkinLoadBalancer' of type [org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.042|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinUrlExtractor' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.046|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$$EnhancerBySpringCGLIB$$2410f2e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.057|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinRestTemplateCustomizer' of type [org.springframework.cloud.sleuth.zipkin2.DefaultZipkinRestTemplateCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.087|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'restTemplateSender' of type [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.106|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'reporter' of type [zipkin2.reporter.AsyncReporter$BoundedAsyncReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.124|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration$$EnhancerBySpringCGLIB$$fda63da8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.148|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'serverProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.166|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$efe8b5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.183|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.189|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.194|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration$$EnhancerBySpringCGLIB$$9a0f746b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.253|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinEndpointLocator' of type [org.springframework.cloud.sleuth.zipkin2.DefaultEndpointLocator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.263|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinSpanListener' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinSpanReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.275|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth.keys-org.springframework.cloud.sleuth.TraceKeys' of type [org.springframework.cloud.sleuth.TraceKeys] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.284|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthTracer' of type [org.springframework.cloud.sleuth.trace.DefaultTracer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.297|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration$$EnhancerBySpringCGLIB$$2dcecb27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.313|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'httpSpanInjector' of type [org.springframework.cloud.sleuth.instrument.web.ZipkinHttpSpanInjector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.324|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'httpTraceKeysInjector' of type [org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.332|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultErrorParser' of type [org.springframework.cloud.sleuth.ExceptionMessageErrorParser] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.340|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'traceRestTemplateInterceptor' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceRestTemplateInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.345|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration$$EnhancerBySpringCGLIB$$f1c0d389] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 16:30:36.724|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|initialize|89|Tomcat initialized with port(s): 9402 (http)
2019-03-14 16:30:36.734|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting service [Tomcat]
2019-03-14 16:30:36.735|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting Servlet Engine: Apache Tomcat/8.5.27
2019-03-14 16:30:37.017|INFO|org.apache.juli.logging.DirectJDKLog|localhost-startStop-1|log|180|Initializing Spring embedded WebApplicationContext
2019-03-14 16:30:37.017|INFO|org.springframework.boot.context.embedded.EmbeddedWebApplicationContext|localhost-startStop-1|prepareEmbeddedWebApplicationContext|276|Root WebApplicationContext: initialization completed in 4369 ms
2019-03-14 16:30:37.726|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'metricsFilter' to: [/*]
2019-03-14 16:30:37.727|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 16:30:37.727|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'traceFilter' to: [/*]
2019-03-14 16:30:37.727|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 16:30:37.728|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 16:30:37.728|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 16:30:37.728|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019-03-14 16:30:37.728|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|271|Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 16:30:37.728|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'applicationContextIdFilter' to: [/*]
2019-03-14 16:30:37.728|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'statViewServlet' to [/druid/*]
2019-03-14 16:30:37.729|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'dispatcherServlet' to [/]
2019-03-14 16:30:38.351|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.decrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-14 16:30:38.352|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.incrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-14 16:30:38.353|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [protected final void com.alibaba.druid.pool.DruidDataSource.handleFatalError(com.alibaba.druid.pool.DruidPooledConnection,java.sql.SQLException,java.lang.String) throws java.sql.SQLException] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-14 16:30:38.733|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2a79da3a: startup date [Thu Mar 14 16:30:38 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2b58c0
2019-03-14 16:30:38.747|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:30:39.348|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@575cfec1: startup date [Thu Mar 14 16:30:39 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2b58c0
2019-03-14 16:30:39.365|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:30:40.426|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.update(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.428|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.428|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.428|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.429|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.429|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.430|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOne(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.430|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.430|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.432|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.432|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/deleteSelf],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.deleteSelf(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 16:30:40.433|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupReject],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupReject(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-14 16:30:40.434|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupRequest(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-14 16:30:40.434|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupAgreed],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupAgreed(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-14 16:30:40.438|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.update(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.438|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.delete(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.438|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.439|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupAdd],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupAdd(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.439|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupOut],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupOut(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.439|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.440|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.findOne(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.440|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.440|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.441|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.441|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.441|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupCreate],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupCreate(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 16:30:40.442|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-14 16:30:40.442|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-14 16:30:40.445|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/rejectFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.rejectFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:30:40.445|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsite],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsite(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:30:40.445|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsitePage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsitePage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:30:40.446|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationship],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationship(com.sunfield.microframe.domain.JmAppUser)
2019-03-14 16:30:40.446|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationshipPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationshipPage(com.sunfield.microframe.domain.JmAppUser)
2019-03-14 16:30:40.446|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/allIndustryRelationshipList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.allIndustryRelationshipList(com.sunfield.microframe.domain.JmAppUser)
2019-03-14 16:30:40.447|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/removeFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.removeFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:30:40.447|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/agreeAsAFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.agreeAsAFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:30:40.447|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/addFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.addFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:30:40.450|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRecord],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.findFriendRecord(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:30:40.450|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriends],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriends(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:30:40.450|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendsPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendsPage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 16:30:40.451|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/achieveNotebook],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.achieveNotebook(com.sunfield.microframe.params.NoteBook)
2019-03-14 16:30:40.454|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 16:30:40.454|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 16:30:40.455|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 16:30:40.458|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-14 16:30:40.459|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 16:30:40.548|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-14 16:30:40.548|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-14 16:30:40.553|INFO|com.netflix.config.DynamicPropertyFactory|main|getInstance|281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2dc77962
2019-03-14 16:30:41.821|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019-03-14 16:30:41.823|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019-03-14 16:30:41.823|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019-03-14 16:30:41.823|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.824|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019-03-14 16:30:41.824|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.826|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019-03-14 16:30:41.826|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019-03-14 16:30:41.827|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019-03-14 16:30:41.827|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.828|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.829|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019-03-14 16:30:41.829|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019-03-14 16:30:41.830|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019-03-14 16:30:41.830|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.830|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-03-14 16:30:41.831|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.832|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.832|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.833|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019-03-14 16:30:41.833|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.834|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.834|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019-03-14 16:30:41.835|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:41.835|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 16:30:42.225|INFO|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping|main|initHandlerMethods|69|Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-14 16:30:42.606|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-14 16:30:42.607|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-14 16:30:42.932|INFO|org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter|main|initControllerAdviceCache|534|Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2b58c0: startup date [Thu Mar 14 16:30:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ce1f601
2019-03-14 16:30:43.078|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 16:30:43.078|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 16:30:43.208|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 16:30:44.165|INFO|org.springframework.ui.freemarker.SpringTemplateLoader|main|<init>|61|SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2b58c0: startup date [Thu Mar 14 16:30:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ce1f601] and template loader path [classpath:/templates/]
2019-03-14 16:30:44.166|INFO|org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer|main|postProcessTemplateLoaders|127|ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-14 16:30:44.821|INFO|org.springframework.scheduling.concurrent.ExecutorConfigurationSupport|main|initialize|165|Initializing ExecutorService 
2019-03-14 16:30:45.199|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-14 16:30:45.201|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'druidDataSource' has been autodetected for JMX exposure
2019-03-14 16:30:45.216|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-03-14 16:30:45.217|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019-03-14 16:30:45.217|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-03-14 16:30:45.218|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019-03-14 16:30:45.220|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-03-14 16:30:45.223|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-03-14 16:30:45.238|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019-03-14 16:30:45.246|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-03-14 16:30:45.262|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7c2b58c0,type=ConfigurationPropertiesRebinder]
2019-03-14 16:30:45.268|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019-03-14 16:30:45.274|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|671|Located MBean 'druidDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=druidDataSource,type=DruidDataSource]
2019-03-14 16:30:45.297|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-14 16:30:45.315|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 0
2019-03-14 16:30:45.322|INFO|org.springframework.cloud.netflix.eureka.InstanceInfoFactory|main|create|71|Setting initial instance status as: STARTING
2019-03-14 16:30:45.356|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|347|Initializing Eureka in region us-east-1
2019-03-14 16:30:45.596|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|70|Using JSON encoding codec LegacyJacksonJson
2019-03-14 16:30:45.596|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|71|Using JSON decoding codec LegacyJacksonJson
2019-03-14 16:30:45.720|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|80|Using XML encoding codec XStreamXml
2019-03-14 16:30:45.720|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|81|Using XML decoding codec XStreamXml
2019-03-14 16:30:46.014|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|main|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 16:30:46.061|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|934|Disable delta property : false
2019-03-14 16:30:46.062|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|935|Single vip registry refresh property : null
2019-03-14 16:30:46.062|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|936|Force full registry fetch : false
2019-03-14 16:30:46.062|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|937|Application is null : false
2019-03-14 16:30:46.062|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|938|Registered Applications size is zero : true
2019-03-14 16:30:46.062|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|940|Application version is -1: true
2019-03-14 16:30:46.062|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1023|Getting all instance registry info from the eureka server
2019-03-14 16:30:46.231|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1032|The response status is 200
2019-03-14 16:30:46.233|INFO|com.netflix.discovery.DiscoveryClient|main|initScheduledTasks|1258|Starting heartbeat executor: renew interval is: 5
2019-03-14 16:30:46.235|INFO|com.netflix.discovery.InstanceInfoReplicator|main|<init>|59|InstanceInfoReplicator onDemand update allowed rate per min is 40
2019-03-14 16:30:46.238|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|434|Discovery Client initialized at timestamp 1552552246238 with initial instances count: 21
2019-03-14 16:30:46.271|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry|main|register|40|Registering application jm-relationship-service with eureka with status UP
2019-03-14 16:30:46.271|INFO|com.netflix.discovery.DiscoveryClient$3|main|notify|1293|Saw local status change event StatusChangeEvent [timestamp=1552552246271, current=UP, previous=STARTING]
2019-03-14 16:30:46.273|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|804|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402: registering service...
2019-03-14 16:30:46.280|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019-03-14 16:30:46.291|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019-03-14 16:30:46.347|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019-03-14 16:30:46.351|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019-03-14 16:30:46.351|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|813|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402 - registration status: 204
2019-03-14 16:30:46.354|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019-03-14 16:30:46.356|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019-03-14 16:30:46.359|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019-03-14 16:30:46.361|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019-03-14 16:30:46.365|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019-03-14 16:30:46.372|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019-03-14 16:30:46.375|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019-03-14 16:30:46.377|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019-03-14 16:30:46.380|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019-03-14 16:30:46.382|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019-03-14 16:30:46.384|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 2147483647
2019-03-14 16:30:46.384|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|151|Context refreshed
2019-03-14 16:30:46.392|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|154|Found 1 custom documentation plugin(s)
2019-03-14 16:30:46.424|INFO|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner|main|scan|41|Scanning for api listing references
2019-03-14 16:30:46.979|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_1
2019-03-14 16:30:46.993|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findListUsingPOST_1
2019-03-14 16:30:47.037|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findOneUsingPOST_1
2019-03-14 16:30:47.039|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findPageUsingPOST_1
2019-03-14 16:30:47.046|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: updateUsingPOST_1
2019-03-14 16:30:47.062|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_2
2019-03-14 16:30:47.064|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: insertUsingPOST_1
2019-03-14 16:30:47.122|INFO|org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration|main|start|138|Starting poller
2019-03-14 16:30:47.157|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Initializing ProtocolHandler ["http-nio-9402"]
2019-03-14 16:30:47.165|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting ProtocolHandler ["http-nio-9402"]
2019-03-14 16:30:47.176|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Using a shared selector for servlet write/read
2019-03-14 16:30:47.199|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|start|201|Tomcat started on port(s): 9402 (http)
2019-03-14 16:30:47.200|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration|main|onApplicationEvent|124|Updating port to 9402
2019-03-14 16:30:47.201|INFO|com.codingapi.tx.springcloud.listener.ServerListener|main|onApplicationEvent|24|onApplicationEvent -> onApplicationEvent. org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer@a6a7c4f
2019-03-14 16:30:47.206|INFO|com.codingapi.tx.netty.service.TxManagerHttpRequestHelper|main|reloadHttpRequestService|47|load HttpRequestService .
2019-03-14 16:30:47.206|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|18|httpGet start
2019-03-14 16:30:47.248|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|20|httpGet end,res is {"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-14 16:30:47.249|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|43|get txManager ->{"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-14 16:30:47.251|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|57|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-14 16:30:47.251|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|59|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-14 16:30:47.349|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|main|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-14 16:30:47.383|INFO|com.codingapi.tx.listener.service.impl.InitServiceImpl|main|start|25|socket-start..
2019-03-14 16:30:47.391|INFO|org.springframework.boot.StartupInfoLogger|main|logStarted|57|Started ServiceApplication in 15.989 seconds (JVM running for 17.713)
2019-03-14 16:30:47.397|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-2-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@56cd6e4c
2019-03-14 16:30:49.534|INFO|com.alibaba.druid.pool.DruidDataSource|RMI TCP Connection(4)-127.0.0.1|init|947|{dataSource-1} inited
2019-03-14 16:30:52.426|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-1|sleepSend|84|send-msg->{"a":"umi","k":"1Jt153YZ","p":{"u":"c7ac4fec47c88b5d51e499516c357ee3","i":"192.168.4.152:9402","m":"jm-relationship-service"}}
2019-03-14 16:30:52.694|INFO|org.apache.juli.logging.DirectJDKLog|http-nio-9402-exec-1|log|180|Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 16:30:52.694|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-9402-exec-1|initServletBean|489|FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 16:30:52.750|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-9402-exec-1|initServletBean|508|FrameworkServlet 'dispatcherServlet': initialization completed in 56 ms
2019-03-14 16:33:24.356|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-10|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook PARAMS:[{"noteBookUsers":[{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"18701372767","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"},{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"15555555555","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"}],"userId":"f481c0e00b524225a8e6f064eee02a9a"}]
2019-03-14 16:34:13.256|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-2-1|channelInactive|74|disconnection  -->io.netty.channel.DefaultChannelHandlerContext@56cd6e4c
2019-03-14 16:34:15.087|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-1|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:34:25.410|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|nioEventLoopGroup-2-1|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-14 16:34:25.414|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-3-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@34067bea
2019-03-14 16:34:30.750|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-2|sleepSend|84|send-msg->{"a":"umi","k":"XHiXEldB","p":{"u":"c7ac4fec47c88b5d51e499516c357ee3","i":"192.168.4.152:9402","m":"jm-relationship-service"}}
2019-03-14 16:34:41.381|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-10|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 16:34:41.416|INFO|org.springframework.context.support.AbstractApplicationContext|http-nio-9402-exec-10|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@718f2dd4: startup date [Thu Mar 14 16:34:41 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2b58c0
2019-03-14 16:34:42.235|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|http-nio-9402-exec-10|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:34:44.181|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|http-nio-9402-exec-10|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 16:34:44.473|INFO|com.netflix.util.concurrent.ShutdownEnabledTimer|http-nio-9402-exec-10|<init>|58|Shutdown hook installed for: NFLoadBalancer-PingTimer-jm-user-service
2019-03-14 16:34:44.497|INFO|com.netflix.loadbalancer.BaseLoadBalancer|http-nio-9402-exec-10|initWithConfig|192|Client: jm-user-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-user-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-14 16:34:44.537|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|http-nio-9402-exec-10|enableAndInitLearnNewServersFeature|222|Using serverListUpdater PollingServerListUpdater
2019-03-14 16:34:44.669|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|http-nio-9402-exec-10|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 16:34:44.681|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|http-nio-9402-exec-10|restOfInit|150|DynamicServerListLoadBalancer for client jm-user-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-user-service,current list of Servers=[192.168.4.72:9200, 172.16.175.39:9200],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.16.175.39:9200;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:192.168.4.72:9200;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@36f007cf
2019-03-14 16:34:45.551|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|PollingServerListUpdater-0|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 16:34:46.417|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-10|chooseServer|28|enter chooseServer method, key:null
2019-03-14 16:34:51.363|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-1|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:34:57.872|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-0|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:35:25.060|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-1|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:35:25.060|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-3-1|channelInactive|74|disconnection  -->io.netty.channel.DefaultChannelHandlerContext@34067bea
2019-03-14 16:36:10.575|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 16:36:11.880|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|nioEventLoopGroup-3-1|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-14 16:36:12.312|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-4-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@6be21022
2019-03-14 16:36:20.085|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-3|sleepSend|84|send-msg->{"a":"umi","k":"dQyG5nZF","p":{"u":"c7ac4fec47c88b5d51e499516c357ee3","i":"192.168.4.152:9402","m":"jm-relationship-service"}}
2019-03-14 16:36:28.916|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-0|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:36:37.762|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-1|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:36:48.187|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-0|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:36:49.507|WARN|com.netflix.discovery.DiscoveryClient|DiscoveryClient-CacheRefreshExecutor-1|getAndUpdateDelta|1088|Not updating application delta as another thread is updating it already
2019-03-14 16:36:50.900|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-10|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 16:36:50.923|INFO|org.springframework.context.support.AbstractApplicationContext|http-nio-9402-exec-10|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@298e8027: startup date [Thu Mar 14 16:36:50 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2b58c0
2019-03-14 16:36:51.440|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|http-nio-9402-exec-10|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 16:36:51.670|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|http-nio-9402-exec-10|checkAndFlip|115|Flipping property: jm-industry-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 16:36:51.688|INFO|com.netflix.util.concurrent.ShutdownEnabledTimer|http-nio-9402-exec-10|<init>|58|Shutdown hook installed for: NFLoadBalancer-PingTimer-jm-industry-service
2019-03-14 16:36:51.692|INFO|com.netflix.loadbalancer.BaseLoadBalancer|http-nio-9402-exec-10|initWithConfig|192|Client: jm-industry-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-industry-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-14 16:36:51.699|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|http-nio-9402-exec-10|enableAndInitLearnNewServersFeature|222|Using serverListUpdater PollingServerListUpdater
2019-03-14 16:36:51.713|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|http-nio-9402-exec-10|checkAndFlip|115|Flipping property: jm-industry-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 16:36:51.718|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|http-nio-9402-exec-10|restOfInit|150|DynamicServerListLoadBalancer for client jm-industry-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-industry-service,current list of Servers=[172.16.175.39:9400],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.16.175.39:9400;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@120d7418
2019-03-14 16:36:52.136|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-10|chooseServer|28|enter chooseServer method, key:null
2019-03-14 16:36:53.682|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|PollingServerListUpdater-0|checkAndFlip|115|Flipping property: jm-industry-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 16:37:16.795|INFO|com.sunfield.microframe.rest.RelationshipController|http-nio-9402-exec-10|achieveNotebook|380|系统异常：status 404 reading JmIndustriesFeignService#findByIds(String[]); content:
{"timestamp":1552552610622,"status":404,"error":"Not Found","message":"No message available","path":"/JmIndustries/findByIds"}
2019-03-14 16:37:16.805|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-10|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook RETURN:{"data":null,"msg":"系统繁忙","relationshipResponseStatus":"BUSY","status":"BUSY"} COST TIME:232440ms
2019-03-14 16:41:10.614|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 16:46:10.618|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 16:46:35.863|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook PARAMS:[{"noteBookUsers":[{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"18701372767","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"},{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"15555555555","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"}],"userId":"f481c0e00b524225a8e6f064eee02a9a"}]
2019-03-14 16:46:50.181|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-3|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 16:46:50.185|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-3|chooseServer|28|enter chooseServer method, key:null
2019-03-14 16:47:03.792|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-3|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 16:47:03.795|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-3|chooseServer|28|enter chooseServer method, key:null
2019-03-14 16:47:48.646|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-4-1|channelInactive|74|disconnection  -->io.netty.channel.DefaultChannelHandlerContext@6be21022
2019-03-14 16:47:48.654|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-HeartbeatExecutor-0|renew|828|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402 - Re-registering apps/JM-RELATIONSHIP-SERVICE
2019-03-14 16:47:48.655|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-HeartbeatExecutor-0|register|804|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402: registering service...
2019-03-14 16:47:50.899|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-HeartbeatExecutor-0|register|813|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402 - registration status: 204
2019-03-14 16:47:51.656|INFO|com.codingapi.tx.netty.service.TxManagerHttpRequestHelper|nioEventLoopGroup-4-1|reloadHttpRequestService|47|load HttpRequestService .
2019-03-14 16:47:51.668|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|nioEventLoopGroup-4-1|httpGet|18|httpGet start
2019-03-14 16:47:52.011|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|nioEventLoopGroup-4-1|httpGet|20|httpGet end,res is {"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-14 16:47:52.016|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|nioEventLoopGroup-4-1|getTxServer|43|get txManager ->{"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-14 16:47:52.024|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|nioEventLoopGroup-4-1|getTxServer|57|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-14 16:47:52.026|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|nioEventLoopGroup-4-1|getTxServer|59|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-14 16:48:09.314|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|nioEventLoopGroup-4-1|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-14 16:48:12.573|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-5-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@42294d86
2019-03-14 16:48:18.005|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-0|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:48:23.062|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-4|sleepSend|84|send-msg->{"a":"umi","k":"UnPZnIZ3","p":{"u":"c7ac4fec47c88b5d51e499516c357ee3","i":"192.168.4.152:9402","m":"jm-relationship-service"}}
2019-03-14 16:48:51.574|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-1|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:48:51.574|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-0|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:49:49.511|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-5-1|channelInactive|74|disconnection  -->io.netty.channel.DefaultChannelHandlerContext@42294d86
2019-03-14 16:49:49.522|ERROR|com.netflix.discovery.TimedSupervisorTask|DiscoveryClient-0|run|67|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-03-14 16:49:53.893|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook RETURN:{"data":[{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":"稻田","createBy":null,"createDate":"2019-02-12 10:24:57","expertStatus":0,"foodNum":14670,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550576599430&di=34339caa60e8304d99855bd9bceaf6c7&imgtype=0&src=http%3A%2F%2Fhbimg.b0.upaiyun.com%2Fa12f24e688c1cda3ff4cc453f3486a88adaf08cc2cdb-tQvJqX_fw658","id":"2874f52adc0a4fdd9b160eda8532180a","industry":"3","industryName":null,"memberEndTime":"2019-02-01 17:11:59","memberMonth":3,"memberStartTime":"2019-02-12 17:11:59","memberStatus":null,"mobile":"15555555555","nickName":"15555555555","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":null,"relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-01 10:28:09","wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":"2019-03-07 11:00:28","expertStatus":1,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"70655d1df09a421dab2b97837d57126b","industry":"null","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"18701372767","nickName":"18701372767","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"eD0gaOFr9SOzERxQda44+Pp/+5D91hweWmGJXyofUphUgICUsWDXzze2kt0veDcr+1MLV+hQSFXAHGKwioosWN6CmNpCxKu1HmpIs6mLMqvqtSDh5QUxz27Br3PfMbRoOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":2,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-11 09:01:39","wxNickName":null,"wxOpenId":null}],"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:198026ms
2019-03-14 16:49:53.897|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|nioEventLoopGroup-5-1|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-14 16:49:53.900|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-6-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@5ad153b8
2019-03-14 16:49:58.902|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-5|sleepSend|84|send-msg->{"a":"umi","k":"9bFU8U3M","p":{"u":"c7ac4fec47c88b5d51e499516c357ee3","i":"192.168.4.152:9402","m":"jm-relationship-service"}}
2019-03-14 16:51:10.622|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 16:56:10.626|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:01:10.630|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:06:10.635|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:06:47.577|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-4|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook PARAMS:[{"noteBookUsers":[{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"18701372767","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"},{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"15555555555","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"}],"userId":"f481c0e00b524225a8e6f064eee02a9a"}]
2019-03-14 17:06:50.675|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-4|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 17:06:50.676|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-4|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:06:51.688|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-4|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:06:52.039|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-4|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 17:06:52.040|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-4|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:06:52.590|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-4|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook RETURN:{"data":[{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":"稻田","createBy":null,"createDate":"2019-02-12 10:24:57","expertStatus":0,"foodNum":14670,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550576599430&di=34339caa60e8304d99855bd9bceaf6c7&imgtype=0&src=http%3A%2F%2Fhbimg.b0.upaiyun.com%2Fa12f24e688c1cda3ff4cc453f3486a88adaf08cc2cdb-tQvJqX_fw658","id":"2874f52adc0a4fdd9b160eda8532180a","industry":"3","industryName":null,"memberEndTime":"2019-02-01 17:11:59","memberMonth":3,"memberStartTime":"2019-02-12 17:11:59","memberStatus":null,"mobile":"15555555555","nickName":"15555555555","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":null,"relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-01 10:28:09","wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":"2019-03-07 11:00:28","expertStatus":1,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"70655d1df09a421dab2b97837d57126b","industry":"null","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"18701372767","nickName":"18701372767","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"eD0gaOFr9SOzERxQda44+Pp/+5D91hweWmGJXyofUphUgICUsWDXzze2kt0veDcr+1MLV+hQSFXAHGKwioosWN6CmNpCxKu1HmpIs6mLMqvqtSDh5QUxz27Br3PfMbRoOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":2,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-11 09:01:39","wxNickName":null,"wxOpenId":null}],"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:5012ms
2019-03-14 17:11:10.639|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:17:38.511|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@39c11e6c: startup date [Thu Mar 14 17:17:38 CST 2019]; root of context hierarchy
2019-03-14 17:17:38.762|INFO|org.hibernate.validator.internal.util.Version|background-preinit|<clinit>|30|HV000001: Hibernate Validator 5.3.6.Final
2019-03-14 17:17:38.834|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 17:17:38.897|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9428595] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:39.301|INFO|org.springframework.boot.SpringApplication|main|logStartupProfileInfo|593|No active profile set, falling back to default profiles: default
2019-03-14 17:17:39.320|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6107165: startup date [Thu Mar 14 17:17:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@39c11e6c
2019-03-14 17:17:41.027|INFO|org.springframework.data.repository.config.RepositoryConfigurationDelegate|main|multipleStoresDetected|165|Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 17:17:41.344|INFO|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider|main|initAppId|93|App ID is set to jm-relationship-service-v1 by app.id property from /META-INF/app.properties
2019-03-14 17:17:41.346|INFO|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider|main|initEnvType|108|Environment is set to [dev] by JVM system property 'env'.
2019-03-14 17:17:41.561|INFO|org.springframework.cloud.context.scope.GenericScope|main|setSerializationId|288|BeanFactory id=a9a41c10-487e-3190-9c4f-d62443b95e03
2019-03-14 17:17:41.640|INFO|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider|main|initMetaServerAddress|42|Located meta services from apollo.meta configuration: http://172.16.175.22:8080!
2019-03-14 17:17:41.643|INFO|com.ctrip.framework.apollo.core.MetaDomainConsts|main|initMetaServerAddress|93|Located meta server address http://172.16.175.22:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-14 17:17:41.780|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 17:17:41.907|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmAppUserFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:41.908|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmIndustriesFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.057|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$ef8dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.218|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.231|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed288298] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.407|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'redisConfig' of type [com.sunfield.microframe.common.config.RedisConfig$$EnhancerBySpringCGLIB$$b9e95e7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.429|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$363ab8b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.500|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$1f5528d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.538|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9428595] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.560|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$2cba5b5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.581|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$d50c2eb7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.608|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$99bb4e17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.642|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth-org.springframework.cloud.sleuth.autoconfig.SleuthProperties' of type [org.springframework.cloud.sleuth.autoconfig.SleuthProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.647|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration' of type [org.springframework.cloud.sleuth.autoconfig.TraceAutoConfiguration$$EnhancerBySpringCGLIB$$26259fab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.676|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultTraceSampler' of type [org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.677|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultTraceSampler' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.685|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'randomForSpanIds' of type [java.util.Random] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.699|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spanNamer' of type [org.springframework.cloud.sleuth.DefaultSpanNamer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.708|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration' of type [org.springframework.cloud.sleuth.log.SleuthLogAutoConfiguration$Slf4jConfiguration$$EnhancerBySpringCGLIB$$7390a979] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.721|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth.log.slf4j-org.springframework.cloud.sleuth.log.SleuthSlf4jProperties' of type [org.springframework.cloud.sleuth.log.SleuthSlf4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.729|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'slf4jSpanLogger' of type [org.springframework.cloud.sleuth.log.Slf4jSpanLogger] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.743|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultSpanAdjuster' of type [org.springframework.cloud.sleuth.NoOpSpanAdjuster] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.747|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$$EnhancerBySpringCGLIB$$603ded99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.763|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig' of type [org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$CounterServiceSpanReporterConfig$$EnhancerBySpringCGLIB$$9f545aeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.776|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.servo.ServoMetricsAutoConfiguration' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$e3a9913e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.798|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'servoMetricsConfig' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricsConfigBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.805|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'monitorRegistry' of type [com.netflix.servo.DefaultMonitorRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.813|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'servoMetricServices' of type [org.springframework.cloud.netflix.metrics.servo.ServoMetricServices] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.822|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration' of type [org.springframework.cloud.sleuth.metric.TraceMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$13b28e79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.834|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthMetricProperties' of type [org.springframework.cloud.sleuth.metric.SleuthMetricProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.841|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spanReporterCounterService' of type [org.springframework.cloud.sleuth.metric.CounterServiceBasedSpanMetricReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.859|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.zipkin-org.springframework.cloud.sleuth.zipkin2.ZipkinProperties' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.898|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.com.codingapi.tx.TransactionConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.901|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.902|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.910|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.914|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$ea74e272] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.939|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.953|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'loadBalancerClient' of type [org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.957|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$DiscoveryClientZipkinUrlExtractorConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$DiscoveryClientZipkinUrlExtractorConfiguration$$EnhancerBySpringCGLIB$$60f52231] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.969|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'loadBalancerClientZipkinLoadBalancer' of type [org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.976|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinUrlExtractor' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.980|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$$EnhancerBySpringCGLIB$$c9e8b3a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:42.990|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinRestTemplateCustomizer' of type [org.springframework.cloud.sleuth.zipkin2.DefaultZipkinRestTemplateCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.019|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'restTemplateSender' of type [org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.036|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'reporter' of type [zipkin2.reporter.AsyncReporter$BoundedAsyncReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.056|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration$$EnhancerBySpringCGLIB$$a37dfe68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.081|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'serverProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.101|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$b4d64c1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.119|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.126|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.133|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration$DefaultEndpointLocatorConfiguration$$EnhancerBySpringCGLIB$$3fe7352b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.195|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinEndpointLocator' of type [org.springframework.cloud.sleuth.zipkin2.DefaultEndpointLocator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.204|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'zipkinSpanListener' of type [org.springframework.cloud.sleuth.zipkin2.ZipkinSpanReporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.216|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'spring.sleuth.keys-org.springframework.cloud.sleuth.TraceKeys' of type [org.springframework.cloud.sleuth.TraceKeys] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.223|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'sleuthTracer' of type [org.springframework.cloud.sleuth.trace.DefaultTracer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.235|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.TraceHttpAutoConfiguration$$EnhancerBySpringCGLIB$$d3a68be7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.250|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'httpSpanInjector' of type [org.springframework.cloud.sleuth.instrument.web.ZipkinHttpSpanInjector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.261|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'httpTraceKeysInjector' of type [org.springframework.cloud.sleuth.instrument.web.HttpTraceKeysInjector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.270|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'defaultErrorParser' of type [org.springframework.cloud.sleuth.ExceptionMessageErrorParser] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.278|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'traceRestTemplateInterceptor' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceRestTemplateInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.284|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceInterceptorConfiguration$$EnhancerBySpringCGLIB$$97989449] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 17:17:43.679|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|initialize|89|Tomcat initialized with port(s): 9402 (http)
2019-03-14 17:17:43.690|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting service [Tomcat]
2019-03-14 17:17:43.691|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting Servlet Engine: Apache Tomcat/8.5.27
2019-03-14 17:17:43.978|INFO|org.apache.juli.logging.DirectJDKLog|localhost-startStop-1|log|180|Initializing Spring embedded WebApplicationContext
2019-03-14 17:17:43.978|INFO|org.springframework.boot.context.embedded.EmbeddedWebApplicationContext|localhost-startStop-1|prepareEmbeddedWebApplicationContext|276|Root WebApplicationContext: initialization completed in 4658 ms
2019-03-14 17:17:45.092|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'metricsFilter' to: [/*]
2019-03-14 17:17:45.093|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 17:17:45.093|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'traceFilter' to: [/*]
2019-03-14 17:17:45.093|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 17:17:45.094|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 17:17:45.094|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 17:17:45.094|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019-03-14 17:17:45.094|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|271|Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 17:17:45.094|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'applicationContextIdFilter' to: [/*]
2019-03-14 17:17:45.094|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'statViewServlet' to [/druid/*]
2019-03-14 17:17:45.096|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'dispatcherServlet' to [/]
2019-03-14 17:17:45.814|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [protected final void com.alibaba.druid.pool.DruidDataSource.handleFatalError(com.alibaba.druid.pool.DruidPooledConnection,java.sql.SQLException,java.lang.String) throws java.sql.SQLException] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-14 17:17:45.815|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.decrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-14 17:17:45.816|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.incrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-14 17:17:46.189|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@aaa7000: startup date [Thu Mar 14 17:17:46 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6107165
2019-03-14 17:17:46.203|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 17:17:46.874|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@737445ab: startup date [Thu Mar 14 17:17:46 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6107165
2019-03-14 17:17:46.891|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 17:17:47.958|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.update(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.959|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.960|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.960|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.961|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.961|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.961|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOne(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.962|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.962|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.963|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.963|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/deleteSelf],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.deleteSelf(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-14 17:17:47.964|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupReject],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupReject(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-14 17:17:47.965|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupRequest(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-14 17:17:47.965|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupAgreed],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupAgreed(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-14 17:17:47.969|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.update(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.969|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.delete(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.969|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.970|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupAdd],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupAdd(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.970|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupOut],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupOut(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.970|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.971|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.findOne(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.971|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.971|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.972|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.972|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.973|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupCreate],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupCreate(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-14 17:17:47.973|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-14 17:17:47.974|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-14 17:17:47.976|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/rejectFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.rejectFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 17:17:47.976|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsite],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsite(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 17:17:47.976|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsitePage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsitePage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 17:17:47.977|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationship],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationship(com.sunfield.microframe.domain.JmAppUser)
2019-03-14 17:17:47.977|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationshipPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationshipPage(com.sunfield.microframe.domain.JmAppUser)
2019-03-14 17:17:47.977|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/allIndustryRelationshipList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.allIndustryRelationshipList(com.sunfield.microframe.domain.JmAppUser)
2019-03-14 17:17:47.978|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/removeFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.removeFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 17:17:47.978|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/agreeAsAFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.agreeAsAFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 17:17:47.979|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/addFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.addFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 17:17:47.980|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRecord],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.findFriendRecord(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 17:17:47.980|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriends],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriends(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 17:17:47.980|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendsPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendsPage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-14 17:17:47.981|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/achieveNotebook],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.achieveNotebook(com.sunfield.microframe.params.NoteBook)
2019-03-14 17:17:47.984|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 17:17:47.985|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 17:17:48.068|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 17:17:48.075|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-14 17:17:48.076|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 17:17:48.177|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-14 17:17:48.177|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-14 17:17:48.181|INFO|com.netflix.config.DynamicPropertyFactory|main|getInstance|281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@24ce5d4c
2019-03-14 17:17:49.531|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.532|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.533|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-03-14 17:17:49.533|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019-03-14 17:17:49.534|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019-03-14 17:17:49.534|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.535|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.537|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019-03-14 17:17:49.537|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019-03-14 17:17:49.538|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.539|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019-03-14 17:17:49.539|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019-03-14 17:17:49.540|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019-03-14 17:17:49.540|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.541|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.542|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019-03-14 17:17:49.542|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.543|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.544|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.545|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019-03-14 17:17:49.545|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019-03-14 17:17:49.545|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.547|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019-03-14 17:17:49.547|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-14 17:17:49.548|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019-03-14 17:17:49.928|INFO|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping|main|initHandlerMethods|69|Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-14 17:17:50.317|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-14 17:17:50.317|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-14 17:17:50.650|INFO|org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter|main|initControllerAdviceCache|534|Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6107165: startup date [Thu Mar 14 17:17:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@39c11e6c
2019-03-14 17:17:50.799|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 17:17:50.799|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 17:17:50.931|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 17:17:51.900|INFO|org.springframework.ui.freemarker.SpringTemplateLoader|main|<init>|61|SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6107165: startup date [Thu Mar 14 17:17:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@39c11e6c] and template loader path [classpath:/templates/]
2019-03-14 17:17:51.901|INFO|org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer|main|postProcessTemplateLoaders|127|ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-14 17:17:52.576|INFO|org.springframework.scheduling.concurrent.ExecutorConfigurationSupport|main|initialize|165|Initializing ExecutorService 
2019-03-14 17:17:52.959|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-14 17:17:52.961|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'druidDataSource' has been autodetected for JMX exposure
2019-03-14 17:17:52.980|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-03-14 17:17:52.980|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019-03-14 17:17:52.981|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-03-14 17:17:52.987|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019-03-14 17:17:52.992|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-03-14 17:17:53.000|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-03-14 17:17:53.018|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019-03-14 17:17:53.028|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-03-14 17:17:53.047|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6107165,type=ConfigurationPropertiesRebinder]
2019-03-14 17:17:53.056|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019-03-14 17:17:53.063|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|671|Located MBean 'druidDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=druidDataSource,type=DruidDataSource]
2019-03-14 17:17:53.105|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-14 17:17:53.138|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 0
2019-03-14 17:17:53.151|INFO|org.springframework.cloud.netflix.eureka.InstanceInfoFactory|main|create|71|Setting initial instance status as: STARTING
2019-03-14 17:17:53.228|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|347|Initializing Eureka in region us-east-1
2019-03-14 17:17:53.653|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|70|Using JSON encoding codec LegacyJacksonJson
2019-03-14 17:17:53.653|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|71|Using JSON decoding codec LegacyJacksonJson
2019-03-14 17:17:53.886|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|80|Using XML encoding codec XStreamXml
2019-03-14 17:17:53.887|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|81|Using XML decoding codec XStreamXml
2019-03-14 17:17:54.315|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|main|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:17:54.363|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|934|Disable delta property : false
2019-03-14 17:17:54.363|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|935|Single vip registry refresh property : null
2019-03-14 17:17:54.363|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|936|Force full registry fetch : false
2019-03-14 17:17:54.363|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|937|Application is null : false
2019-03-14 17:17:54.363|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|938|Registered Applications size is zero : true
2019-03-14 17:17:54.363|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|940|Application version is -1: true
2019-03-14 17:17:54.364|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1023|Getting all instance registry info from the eureka server
2019-03-14 17:17:54.549|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1032|The response status is 200
2019-03-14 17:17:54.551|INFO|com.netflix.discovery.DiscoveryClient|main|initScheduledTasks|1258|Starting heartbeat executor: renew interval is: 5
2019-03-14 17:17:54.553|INFO|com.netflix.discovery.InstanceInfoReplicator|main|<init>|59|InstanceInfoReplicator onDemand update allowed rate per min is 40
2019-03-14 17:17:54.556|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|434|Discovery Client initialized at timestamp 1552555074556 with initial instances count: 20
2019-03-14 17:17:54.602|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry|main|register|40|Registering application jm-relationship-service with eureka with status UP
2019-03-14 17:17:54.603|INFO|com.netflix.discovery.DiscoveryClient$3|main|notify|1293|Saw local status change event StatusChangeEvent [timestamp=1552555074603, current=UP, previous=STARTING]
2019-03-14 17:17:54.605|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|804|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402: registering service...
2019-03-14 17:17:54.611|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019-03-14 17:17:54.623|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019-03-14 17:17:54.637|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019-03-14 17:17:54.641|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019-03-14 17:17:54.645|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019-03-14 17:17:54.995|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|813|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:9402 - registration status: 204
2019-03-14 17:17:54.998|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019-03-14 17:17:55.002|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019-03-14 17:17:55.005|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019-03-14 17:17:55.015|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019-03-14 17:17:55.023|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019-03-14 17:17:55.026|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019-03-14 17:17:55.028|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019-03-14 17:17:55.031|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019-03-14 17:17:55.034|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019-03-14 17:17:55.035|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 2147483647
2019-03-14 17:17:55.035|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|151|Context refreshed
2019-03-14 17:17:55.044|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|154|Found 1 custom documentation plugin(s)
2019-03-14 17:17:55.087|INFO|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner|main|scan|41|Scanning for api listing references
2019-03-14 17:17:55.403|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_1
2019-03-14 17:17:55.417|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findListUsingPOST_1
2019-03-14 17:17:55.461|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findOneUsingPOST_1
2019-03-14 17:17:55.463|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findPageUsingPOST_1
2019-03-14 17:17:55.470|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: updateUsingPOST_1
2019-03-14 17:17:55.488|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_2
2019-03-14 17:17:55.489|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: insertUsingPOST_1
2019-03-14 17:17:55.548|INFO|org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration|main|start|138|Starting poller
2019-03-14 17:17:55.584|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Initializing ProtocolHandler ["http-nio-9402"]
2019-03-14 17:17:55.592|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting ProtocolHandler ["http-nio-9402"]
2019-03-14 17:17:55.604|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Using a shared selector for servlet write/read
2019-03-14 17:17:55.627|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|start|201|Tomcat started on port(s): 9402 (http)
2019-03-14 17:17:55.628|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration|main|onApplicationEvent|124|Updating port to 9402
2019-03-14 17:17:55.628|INFO|com.codingapi.tx.springcloud.listener.ServerListener|main|onApplicationEvent|24|onApplicationEvent -> onApplicationEvent. org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer@58c48b92
2019-03-14 17:17:55.634|INFO|com.codingapi.tx.netty.service.TxManagerHttpRequestHelper|main|reloadHttpRequestService|47|load HttpRequestService .
2019-03-14 17:17:55.634|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|18|httpGet start
2019-03-14 17:17:55.674|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|20|httpGet end,res is {"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-14 17:17:55.674|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|43|get txManager ->{"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-14 17:17:55.676|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|57|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-14 17:17:55.676|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|59|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-14 17:17:55.772|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|main|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-14 17:17:55.805|INFO|com.codingapi.tx.listener.service.impl.InitServiceImpl|main|start|25|socket-start..
2019-03-14 17:17:55.812|INFO|org.springframework.boot.StartupInfoLogger|main|logStarted|57|Started ServiceApplication in 17.851 seconds (JVM running for 19.556)
2019-03-14 17:17:55.820|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-2-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@19525d5
2019-03-14 17:17:58.126|INFO|com.alibaba.druid.pool.DruidDataSource|RMI TCP Connection(7)-127.0.0.1|init|947|{dataSource-1} inited
2019-03-14 17:18:00.848|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-1|sleepSend|84|send-msg->{"a":"umi","k":"xkKJ5q6C","p":{"u":"c7ac4fec47c88b5d51e499516c357ee3","i":"192.168.4.152:9402","m":"jm-relationship-service"}}
2019-03-14 17:18:42.473|INFO|org.apache.juli.logging.DirectJDKLog|http-nio-9402-exec-1|log|180|Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 17:18:42.473|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-9402-exec-1|initServletBean|489|FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 17:18:42.553|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-9402-exec-1|initServletBean|508|FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
2019-03-14 17:18:42.651|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-1|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook PARAMS:[{"noteBookUsers":[{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"18701372767","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"},{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"15555555555","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"}],"userId":"f481c0e00b524225a8e6f064eee02a9a"}]
2019-03-14 17:18:47.965|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-1|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 17:18:47.971|INFO|org.springframework.context.support.AbstractApplicationContext|http-nio-9402-exec-1|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@20dc3234: startup date [Thu Mar 14 17:18:47 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6107165
2019-03-14 17:18:48.113|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|http-nio-9402-exec-1|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 17:18:48.556|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|http-nio-9402-exec-1|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 17:18:48.620|INFO|com.netflix.util.concurrent.ShutdownEnabledTimer|http-nio-9402-exec-1|<init>|58|Shutdown hook installed for: NFLoadBalancer-PingTimer-jm-user-service
2019-03-14 17:18:48.629|INFO|com.netflix.loadbalancer.BaseLoadBalancer|http-nio-9402-exec-1|initWithConfig|192|Client: jm-user-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-user-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-14 17:18:48.644|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|http-nio-9402-exec-1|enableAndInitLearnNewServersFeature|222|Using serverListUpdater PollingServerListUpdater
2019-03-14 17:18:48.674|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|http-nio-9402-exec-1|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 17:18:48.678|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|http-nio-9402-exec-1|restOfInit|150|DynamicServerListLoadBalancer for client jm-user-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-user-service,current list of Servers=[172.16.175.39:9200, 192.168.4.72:9200],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.16.175.39:9200;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:192.168.4.72:9200;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@18a42aea
2019-03-14 17:18:49.066|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-1|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:18:49.376|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-1|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 17:18:49.377|INFO|org.springframework.context.support.AbstractApplicationContext|http-nio-9402-exec-1|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4de17eba: startup date [Thu Mar 14 17:18:49 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6107165
2019-03-14 17:18:49.412|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|http-nio-9402-exec-1|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-14 17:18:49.430|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|http-nio-9402-exec-1|checkAndFlip|115|Flipping property: jm-industry-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 17:18:49.432|INFO|com.netflix.util.concurrent.ShutdownEnabledTimer|http-nio-9402-exec-1|<init>|58|Shutdown hook installed for: NFLoadBalancer-PingTimer-jm-industry-service
2019-03-14 17:18:49.434|INFO|com.netflix.loadbalancer.BaseLoadBalancer|http-nio-9402-exec-1|initWithConfig|192|Client: jm-industry-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-industry-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-14 17:18:49.436|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|http-nio-9402-exec-1|enableAndInitLearnNewServersFeature|222|Using serverListUpdater PollingServerListUpdater
2019-03-14 17:18:49.438|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|http-nio-9402-exec-1|checkAndFlip|115|Flipping property: jm-industry-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 17:18:49.439|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|http-nio-9402-exec-1|restOfInit|150|DynamicServerListLoadBalancer for client jm-industry-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-industry-service,current list of Servers=[172.16.175.39:9400],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.16.175.39:9400;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2c4eef68
2019-03-14 17:18:49.531|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-1|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:18:49.649|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|PollingServerListUpdater-0|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 17:18:49.862|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-1|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook RETURN:{"data":[{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":"稻田","createBy":null,"createDate":"2019-02-12 10:24:57","expertStatus":0,"foodNum":14670,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550576599430&di=34339caa60e8304d99855bd9bceaf6c7&imgtype=0&src=http%3A%2F%2Fhbimg.b0.upaiyun.com%2Fa12f24e688c1cda3ff4cc453f3486a88adaf08cc2cdb-tQvJqX_fw658","id":"2874f52adc0a4fdd9b160eda8532180a","industry":"3","industryName":null,"memberEndTime":"2019-02-01 17:11:59","memberMonth":3,"memberStartTime":"2019-02-12 17:11:59","memberStatus":null,"mobile":"15555555555","nickName":"15555555555","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":null,"relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-01 10:28:09","wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":"2019-03-07 11:00:28","expertStatus":1,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"70655d1df09a421dab2b97837d57126b","industry":"null","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"18701372767","nickName":"18701372767","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"eD0gaOFr9SOzERxQda44+Pp/+5D91hweWmGJXyofUphUgICUsWDXzze2kt0veDcr+1MLV+hQSFXAHGKwioosWN6CmNpCxKu1HmpIs6mLMqvqtSDh5QUxz27Br3PfMbRoOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":2,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-11 09:01:39","wxNickName":null,"wxOpenId":null}],"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:7197ms
2019-03-14 17:18:50.437|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|PollingServerListUpdater-1|checkAndFlip|115|Flipping property: jm-industry-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-14 17:22:54.369|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:23:10.577|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook PARAMS:[{"noteBookUsers":[{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"18701372767","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"},{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"15555555555","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"}],"userId":"f481c0e00b524225a8e6f064eee02a9a"}]
2019-03-14 17:23:13.176|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-3|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 17:23:13.177|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-3|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:23:13.449|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-3|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 17:23:13.450|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-3|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:23:13.740|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-3|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook RETURN:{"data":[{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":"稻田","createBy":null,"createDate":"2019-02-12 10:24:57","expertStatus":0,"foodNum":14670,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550576599430&di=34339caa60e8304d99855bd9bceaf6c7&imgtype=0&src=http%3A%2F%2Fhbimg.b0.upaiyun.com%2Fa12f24e688c1cda3ff4cc453f3486a88adaf08cc2cdb-tQvJqX_fw658","id":"2874f52adc0a4fdd9b160eda8532180a","industry":"3","industryName":null,"memberEndTime":"2019-02-01 17:11:59","memberMonth":3,"memberStartTime":"2019-02-12 17:11:59","memberStatus":null,"mobile":"15555555555","nickName":"15555555555","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":null,"relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-01 10:28:09","wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":"2019-03-07 11:00:28","expertStatus":1,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"70655d1df09a421dab2b97837d57126b","industry":"null","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"18701372767","nickName":"18701372767","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"eD0gaOFr9SOzERxQda44+Pp/+5D91hweWmGJXyofUphUgICUsWDXzze2kt0veDcr+1MLV+hQSFXAHGKwioosWN6CmNpCxKu1HmpIs6mLMqvqtSDh5QUxz27Br3PfMbRoOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":2,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-11 09:01:39","wxNickName":null,"wxOpenId":null}],"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:3162ms
2019-03-14 17:27:54.374|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:29:43.889|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-5|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook PARAMS:[{"noteBookUsers":[{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"18701372767","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"},{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"15555555555","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"}],"userId":"f481c0e00b524225a8e6f064eee02a9a"}]
2019-03-14 17:29:46.452|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-5|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 17:29:46.453|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-5|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:29:47.468|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-5|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:29:47.714|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-5|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 17:29:47.715|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-5|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:29:47.978|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-5|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook RETURN:{"data":[{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":"稻田","createBy":null,"createDate":"2019-02-12 10:24:57","expertStatus":0,"foodNum":14670,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550576599430&di=34339caa60e8304d99855bd9bceaf6c7&imgtype=0&src=http%3A%2F%2Fhbimg.b0.upaiyun.com%2Fa12f24e688c1cda3ff4cc453f3486a88adaf08cc2cdb-tQvJqX_fw658","id":"2874f52adc0a4fdd9b160eda8532180a","industry":"3","industryName":null,"memberEndTime":"2019-02-01 17:11:59","memberMonth":3,"memberStartTime":"2019-02-12 17:11:59","memberStatus":null,"mobile":"15555555555","nickName":"15555555555","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":null,"relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-01 10:28:09","wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":"2019-03-07 11:00:28","expertStatus":1,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"70655d1df09a421dab2b97837d57126b","industry":"null","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"18701372767","nickName":"18701372767","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"eD0gaOFr9SOzERxQda44+Pp/+5D91hweWmGJXyofUphUgICUsWDXzze2kt0veDcr+1MLV+hQSFXAHGKwioosWN6CmNpCxKu1HmpIs6mLMqvqtSDh5QUxz27Br3PfMbRoOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":2,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-11 09:01:39","wxNickName":null,"wxOpenId":null}],"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:4087ms
2019-03-14 17:32:54.378|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:37:54.383|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:42:54.388|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:47:54.392|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:52:54.396|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:57:54.400|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 17:58:52.067|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-7|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook PARAMS:[{"noteBookUsers":[{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"18701372767","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"},{"businessAuthenticationId":"string","cardPicUrl":"string","cardStatus":0,"companyName":"string","createBy":"string","createDate":"2019-03-14 16:31:01","expertStatus":0,"foodNum":0,"friendStatus":0,"gender":0,"groupAddDate":"2019-03-14 16:31:01","headPicUrl":"string","id":"string","industry":"string","industryName":"string","memberEndTime":"2019-03-14 16:31:01","memberMonth":0,"memberStartTime":"2019-03-14 16:31:01","memberStatus":0,"mobile":"15555555555","nickName":"string","pageNumber":0,"pageSize":0,"post":"string","qqNickName":"string","qqOpenId":"string","rcToken":"string","relationType":0,"remarks":"string","scoreNum":0,"sign":"string","sinaNickName":"string","sinaOpenId":"string","status":null,"token":"string","updateBy":"string","updateDate":"2019-03-14 16:31:01","wxNickName":"string","wxOpenId":"string"}],"userId":"f481c0e00b524225a8e6f064eee02a9a"}]
2019-03-14 17:58:53.985|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-7|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 17:58:53.986|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-7|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:58:54.110|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|http-nio-9402-exec-7|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-14 17:58:54.111|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|http-nio-9402-exec-7|chooseServer|28|enter chooseServer method, key:null
2019-03-14 17:58:54.393|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-9402-exec-7|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#achieveNotebook RETURN:{"data":[{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":"稻田","createBy":null,"createDate":"2019-02-12 10:24:57","expertStatus":0,"foodNum":14670,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1550576599430&di=34339caa60e8304d99855bd9bceaf6c7&imgtype=0&src=http%3A%2F%2Fhbimg.b0.upaiyun.com%2Fa12f24e688c1cda3ff4cc453f3486a88adaf08cc2cdb-tQvJqX_fw658","id":"2874f52adc0a4fdd9b160eda8532180a","industry":"3","industryName":null,"memberEndTime":"2019-02-01 17:11:59","memberMonth":3,"memberStartTime":"2019-02-12 17:11:59","memberStatus":null,"mobile":"15555555555","nickName":"15555555555","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":null,"relationType":null,"remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-01 10:28:09","wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":null,"cardPicUrl":null,"cardStatus":0,"companyName":null,"createBy":null,"createDate":"2019-03-07 11:00:28","expertStatus":1,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"70655d1df09a421dab2b97837d57126b","industry":"null","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"18701372767","nickName":"18701372767","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"eD0gaOFr9SOzERxQda44+Pp/+5D91hweWmGJXyofUphUgICUsWDXzze2kt0veDcr+1MLV+hQSFXAHGKwioosWN6CmNpCxKu1HmpIs6mLMqvqtSDh5QUxz27Br3PfMbRoOYBUERnnvuI=","relationType":null,"remarks":null,"scoreNum":2,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-11 09:01:39","wxNickName":null,"wxOpenId":null}],"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:2325ms
2019-03-14 18:02:54.404|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-14 18:07:54.408|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
