2019-03-08 12:39:45.520|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6cc0bcf6: startup date [Fri Mar 08 12:39:45 CST 2019]; root of context hierarchy
2019-03-08 12:39:45.993|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-08 12:39:45.995|INFO|org.hibernate.validator.internal.util.Version|background-preinit|<clinit>|30|HV000001: Hibernate Validator 5.3.6.Final
2019-03-08 12:39:46.084|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6b0f08f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 12:39:46.621|INFO|org.springframework.boot.SpringApplication|main|logStartupProfileInfo|593|No active profile set, falling back to default profiles: default
2019-03-08 12:39:46.656|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a34f66a: startup date [Fri Mar 08 12:39:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6cc0bcf6
2019-03-08 12:39:48.979|INFO|org.springframework.data.repository.config.RepositoryConfigurationDelegate|main|multipleStoresDetected|165|Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-08 12:39:49.361|INFO|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider|main|initAppId|93|App ID is set to jm-relationship-service-v1 by app.id property from /META-INF/app.properties
2019-03-08 12:39:49.363|INFO|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider|main|initEnvType|108|Environment is set to [dev] by JVM system property 'env'.
2019-03-08 12:39:49.613|INFO|org.springframework.cloud.context.scope.GenericScope|main|setSerializationId|288|BeanFactory id=a28870a0-6643-3746-9c13-9ffdb32f2a03
2019-03-08 12:39:49.696|INFO|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider|main|initMetaServerAddress|42|Located meta services from apollo.meta configuration: http://172.16.175.22:8080!
2019-03-08 12:39:49.699|INFO|com.ctrip.framework.apollo.core.MetaDomainConsts|main|initMetaServerAddress|93|Located meta server address http://172.16.175.22:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-08 12:39:49.918|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-08 12:39:50.296|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmAppUserFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 12:39:50.297|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmIndustriesFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 12:39:50.492|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4ef505f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 12:39:50.759|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'redisConfig' of type [com.sunfield.microframe.common.config.RedisConfig$$EnhancerBySpringCGLIB$$1bb5e1e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 12:39:50.772|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$98073c17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 12:39:50.853|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$8121ac3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 12:39:50.893|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6b0f08f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 12:39:51.704|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|initialize|89|Tomcat initialized with port(s): 18089 (http)
2019-03-08 12:39:51.718|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting service [Tomcat]
2019-03-08 12:39:51.719|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting Servlet Engine: Apache Tomcat/8.5.27
2019-03-08 12:39:52.007|INFO|org.apache.juli.logging.DirectJDKLog|localhost-startStop-1|log|180|Initializing Spring embedded WebApplicationContext
2019-03-08 12:39:52.008|INFO|org.springframework.boot.context.embedded.EmbeddedWebApplicationContext|localhost-startStop-1|prepareEmbeddedWebApplicationContext|276|Root WebApplicationContext: initialization completed in 5352 ms
2019-03-08 12:39:52.581|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'statViewServlet' to [/druid/*]
2019-03-08 12:39:52.583|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'dispatcherServlet' to [/]
2019-03-08 12:39:52.589|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'metricsFilter' to: [/*]
2019-03-08 12:39:52.590|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-08 12:39:52.590|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-08 12:39:52.590|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-08 12:39:52.590|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'requestContextFilter' to: [/*]
2019-03-08 12:39:52.591|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019-03-08 12:39:52.591|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|271|Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-08 12:39:52.591|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'applicationContextIdFilter' to: [/*]
2019-03-08 12:39:53.261|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [protected final void com.alibaba.druid.pool.DruidDataSource.handleFatalError(com.alibaba.druid.pool.DruidPooledConnection,java.sql.SQLException,java.lang.String) throws java.sql.SQLException] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-08 12:39:53.262|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.decrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-08 12:39:53.263|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.incrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-08 12:39:53.627|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6aa9a93b: startup date [Fri Mar 08 12:39:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a34f66a
2019-03-08 12:39:53.655|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-08 12:39:54.565|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7f792530: startup date [Fri Mar 08 12:39:54 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a34f66a
2019-03-08 12:39:54.582|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-08 12:39:56.033|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.update(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.035|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.036|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.036|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.037|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.037|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.038|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.038|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOne(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.039|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.039|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.040|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/deleteSelf],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.deleteSelf(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 12:39:56.041|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupReject],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupReject(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-08 12:39:56.042|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupRequest(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-08 12:39:56.042|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupAgreed],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupAgreed(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-08 12:39:56.043|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupRequestStatus],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupRequestStatus(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-08 12:39:56.047|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.update(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.047|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.delete(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.048|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.048|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupAdd],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupAdd(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.049|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupOut],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupOut(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.049|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.050|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.findOne(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.050|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.050|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.051|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.051|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupCreate],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupCreate(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.052|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.052|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findGroupRelation],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.findGroupRelation(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 12:39:56.053|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-08 12:39:56.054|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-08 12:39:56.056|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/removeFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.removeFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 12:39:56.056|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/agreeAsAFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.agreeAsAFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 12:39:56.056|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/addFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.addFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 12:39:56.057|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRecord],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.findFriendRecord(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 12:39:56.057|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriends],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriends(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 12:39:56.058|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendsPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendsPage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 12:39:56.058|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/rejectFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.rejectFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 12:39:56.058|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsite],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsite(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 12:39:56.059|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsitePage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsitePage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 12:39:56.061|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationship],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationship(com.sunfield.microframe.domain.JmAppUser)
2019-03-08 12:39:56.061|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationshipPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationshipPage(com.sunfield.microframe.domain.JmAppUser)
2019-03-08 12:39:56.064|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-08 12:39:56.065|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-08 12:39:56.066|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-08 12:39:56.070|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-08 12:39:56.070|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-08 12:39:56.137|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-08 12:39:56.137|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-08 12:39:56.156|INFO|com.netflix.config.DynamicPropertyFactory|main|getInstance|281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3694461d
2019-03-08 12:39:57.443|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.445|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019-03-08 12:39:57.446|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019-03-08 12:39:57.446|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-03-08 12:39:57.447|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.448|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019-03-08 12:39:57.448|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.449|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019-03-08 12:39:57.451|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019-03-08 12:39:57.451|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019-03-08 12:39:57.452|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.452|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019-03-08 12:39:57.452|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019-03-08 12:39:57.453|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019-03-08 12:39:57.453|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019-03-08 12:39:57.454|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019-03-08 12:39:57.454|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.455|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.456|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.456|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.457|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.458|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019-03-08 12:39:57.459|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.459|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.460|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 12:39:57.903|INFO|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping|main|initHandlerMethods|69|Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-08 12:39:58.213|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-08 12:39:58.214|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-08 12:39:58.548|INFO|org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter|main|initControllerAdviceCache|534|Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a34f66a: startup date [Fri Mar 08 12:39:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6cc0bcf6
2019-03-08 12:39:58.654|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-08 12:39:58.654|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-08 12:39:58.745|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-08 12:39:59.600|INFO|org.springframework.ui.freemarker.SpringTemplateLoader|main|<init>|61|SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a34f66a: startup date [Fri Mar 08 12:39:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6cc0bcf6] and template loader path [classpath:/templates/]
2019-03-08 12:39:59.602|INFO|org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer|main|postProcessTemplateLoaders|127|ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-08 12:40:00.458|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-08 12:40:00.460|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'druidDataSource' has been autodetected for JMX exposure
2019-03-08 12:40:00.475|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-03-08 12:40:00.476|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019-03-08 12:40:00.476|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-03-08 12:40:00.477|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019-03-08 12:40:00.478|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-03-08 12:40:00.481|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-03-08 12:40:00.499|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019-03-08 12:40:00.507|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-03-08 12:40:00.524|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7a34f66a,type=ConfigurationPropertiesRebinder]
2019-03-08 12:40:00.530|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019-03-08 12:40:00.535|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|671|Located MBean 'druidDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=druidDataSource,type=DruidDataSource]
2019-03-08 12:40:00.562|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-08 12:40:00.578|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 0
2019-03-08 12:40:00.585|INFO|org.springframework.cloud.netflix.eureka.InstanceInfoFactory|main|create|71|Setting initial instance status as: STARTING
2019-03-08 12:40:00.633|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|347|Initializing Eureka in region us-east-1
2019-03-08 12:40:01.531|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|70|Using JSON encoding codec LegacyJacksonJson
2019-03-08 12:40:01.531|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|71|Using JSON decoding codec LegacyJacksonJson
2019-03-08 12:40:01.798|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|80|Using XML encoding codec XStreamXml
2019-03-08 12:40:01.798|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|81|Using XML decoding codec XStreamXml
2019-03-08 12:40:02.284|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|main|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-08 12:40:02.334|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|934|Disable delta property : false
2019-03-08 12:40:02.334|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|935|Single vip registry refresh property : null
2019-03-08 12:40:02.334|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|936|Force full registry fetch : false
2019-03-08 12:40:02.335|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|937|Application is null : false
2019-03-08 12:40:02.335|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|938|Registered Applications size is zero : true
2019-03-08 12:40:02.335|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|940|Application version is -1: true
2019-03-08 12:40:02.335|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1023|Getting all instance registry info from the eureka server
2019-03-08 12:40:02.605|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1032|The response status is 200
2019-03-08 12:40:02.606|INFO|com.netflix.discovery.DiscoveryClient|main|initScheduledTasks|1258|Starting heartbeat executor: renew interval is: 30
2019-03-08 12:40:02.608|INFO|com.netflix.discovery.InstanceInfoReplicator|main|<init>|59|InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-08 12:40:02.611|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|434|Discovery Client initialized at timestamp 1552020002610 with initial instances count: 19
2019-03-08 12:40:02.638|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry|main|register|40|Registering application jm-relationship-service with eureka with status UP
2019-03-08 12:40:02.639|INFO|com.netflix.discovery.DiscoveryClient$3|main|notify|1293|Saw local status change event StatusChangeEvent [timestamp=1552020002639, current=UP, previous=STARTING]
2019-03-08 12:40:02.641|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|804|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:18089: registering service...
2019-03-08 12:40:02.645|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019-03-08 12:40:02.654|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019-03-08 12:40:02.666|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019-03-08 12:40:02.669|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019-03-08 12:40:02.672|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019-03-08 12:40:02.675|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019-03-08 12:40:02.678|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019-03-08 12:40:02.680|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019-03-08 12:40:02.684|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019-03-08 12:40:02.691|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019-03-08 12:40:02.693|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019-03-08 12:40:02.696|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019-03-08 12:40:02.698|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019-03-08 12:40:02.701|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019-03-08 12:40:02.702|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 2147483647
2019-03-08 12:40:02.702|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|151|Context refreshed
2019-03-08 12:40:02.711|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|154|Found 1 custom documentation plugin(s)
2019-03-08 12:40:02.720|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|813|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:18089 - registration status: 204
2019-03-08 12:40:02.750|INFO|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner|main|scan|41|Scanning for api listing references
2019-03-08 12:40:03.136|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_1
2019-03-08 12:40:03.152|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findListUsingPOST_1
2019-03-08 12:40:03.198|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findOneUsingPOST_1
2019-03-08 12:40:03.200|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findPageUsingPOST_1
2019-03-08 12:40:03.207|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: updateUsingPOST_1
2019-03-08 12:40:03.224|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_2
2019-03-08 12:40:03.225|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: insertUsingPOST_1
2019-03-08 12:40:03.330|INFO|org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration|main|start|138|Starting poller
2019-03-08 12:40:03.392|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Initializing ProtocolHandler ["http-nio-18089"]
2019-03-08 12:40:03.407|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting ProtocolHandler ["http-nio-18089"]
2019-03-08 12:40:03.428|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Using a shared selector for servlet write/read
2019-03-08 12:40:03.773|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|start|201|Tomcat started on port(s): 18089 (http)
2019-03-08 12:40:03.774|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration|main|onApplicationEvent|124|Updating port to 18089
2019-03-08 12:40:03.775|INFO|com.codingapi.tx.springcloud.listener.ServerListener|main|onApplicationEvent|24|onApplicationEvent -> onApplicationEvent. org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer@55154761
2019-03-08 12:40:03.779|INFO|com.codingapi.tx.netty.service.TxManagerHttpRequestHelper|main|reloadHttpRequestService|47|load HttpRequestService .
2019-03-08 12:40:03.779|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|18|httpGet start
2019-03-08 12:40:07.115|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|20|httpGet end,res is {"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-08 12:40:07.116|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|43|get txManager ->{"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-08 12:40:07.118|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|57|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-08 12:40:07.118|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|59|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-08 12:40:07.305|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|main|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-08 12:40:07.365|INFO|com.codingapi.tx.listener.service.impl.InitServiceImpl|main|start|25|socket-start..
2019-03-08 12:40:07.373|INFO|org.springframework.boot.StartupInfoLogger|main|logStarted|57|Started ServiceApplication in 22.99 seconds (JVM running for 26.789)
2019-03-08 12:40:07.384|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-2-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@d53c0a
2019-03-08 12:40:10.647|INFO|com.alibaba.druid.pool.DruidDataSource|RMI TCP Connection(4)-127.0.0.1|init|947|{dataSource-1} inited
2019-03-08 12:40:12.420|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-1|sleepSend|84|send-msg->{"a":"umi","k":"PzSU4rfJ","p":{"u":"286bae9563235576a14a2ae8fdd7215a","i":"192.168.4.152:18089","m":"jm-relationship-service"}}
2019-03-08 12:41:13.173|INFO|org.apache.juli.logging.DirectJDKLog|http-nio-18089-exec-1|log|180|Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-08 12:41:13.174|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-18089-exec-1|initServletBean|489|FrameworkServlet 'dispatcherServlet': initialization started
2019-03-08 12:41:13.291|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-18089-exec-1|initServletBean|508|FrameworkServlet 'dispatcherServlet': initialization completed in 117 ms
2019-03-08 12:41:37.164|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-18089-exec-6|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#findFriends PARAMS:[{"createBy":"string","createDate":"2019-03-08 12:41:14","id":"string","pageNumber":0,"pageSize":0,"remarks":"string","reverse":true,"status":null,"type":0,"updateBy":"string","updateDate":null,"userId":"0cbc9604001046299c9b58fc397a6cfa","userIdOpposite":"string"}]
2019-03-08 12:41:37.286|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-18089-exec-6|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#findFriends RETURN:{"data":[{"businessAuthenticationId":"d0440d524b674eb89c16b91cd70ba32a","cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":null,"createBy":null,"createDate":"2019-02-23 11:02:40","expertStatus":2,"foodNum":0,"friendStatus":0,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190219165551.jpg","id":"4f57a264a581421eb5571ab473bc31c8","industry":"2","industryName":null,"memberEndTime":null,"memberMonth":0,"memberStartTime":null,"memberStatus":null,"mobile":"15140030883","nickName":"15140030883","pageNumber":0,"pageSize":0,"post":null,"qqNickName":null,"qqOpenId":null,"rcToken":"ZQDr7LDu73HHmj4Trd6vCvp/+5D91hweWmGJXyofUphUgICUsWDXz/RzJA7LpdlWa4r3ue7t+m+/1JGM0E3mNd0d0sbML+XGYhAUYSYa/XzMUEGobQks8IU7adxLjpPsOYBUERnnvuI=","remarks":null,"scoreNum":0,"sign":null,"sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-05 14:18:11","wxNickName":null,"wxOpenId":null},{"businessAuthenticationId":null,"cardPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20181119_20126228415.JPEG","cardStatus":1,"companyName":"稻田","createBy":null,"createDate":"2019-02-13 16:05:37","expertStatus":0,"foodNum":50120,"friendStatus":1,"gender":1,"groupAddDate":null,"headPicUrl":"http://jm-dev.oss-cn-beijing.aliyuncs.com/20190226/20190225_14401731996.JPEG","id":"73d8e67676d64dc786dfad06869570ec","industry":"3","industryName":null,"memberEndTime":"2020-03-01 10:32:05","memberMonth":12,"memberStartTime":"2019-03-01 10:32:05","memberStatus":null,"mobile":"18701392767","nickName":"老二😂","pageNumber":0,"pageSize":0,"post":"开发","qqNickName":null,"qqOpenId":null,"rcToken":"UStdSL9zNNJwFprnMOGiwyJvsDwrVf4X+vmTbfIkkk1RxEia6zmZhDOIfunOW1aX+a3NI6D89j0CVaUaFgkpqlvO6gqxmnEAzYufGgQgOXVXkVH4yhpDlfxLKNOU1sKm","remarks":null,"scoreNum":14,"sign":"nxnxnxb","sinaNickName":null,"sinaOpenId":null,"status":null,"token":null,"updateBy":null,"updateDate":"2019-03-05 20:02:08","wxNickName":"㊣V_opa","wxOpenId":"oiRJ01KobvFRFmY73uqfeNtnbzkg"}],"msg":"请求成功","relationshipResponseStatus":"SUCCESS","status":"SUCCESS"} COST TIME:108ms
2019-03-08 12:45:02.341|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-08 12:50:02.345|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-08 12:55:02.349|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-08 12:55:28.900|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-2-1|channelInactive|74|disconnection  -->io.netty.channel.DefaultChannelHandlerContext@d53c0a
2019-03-08 12:55:31.924|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|nioEventLoopGroup-2-1|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-08 12:55:31.929|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-3-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@1c06139d
2019-03-08 12:55:36.932|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-2|sleepSend|84|send-msg->{"a":"umi","k":"qb7Cfklg","p":{"u":"286bae9563235576a14a2ae8fdd7215a","i":"192.168.4.152:18089","m":"jm-relationship-service"}}
2019-03-08 13:00:02.353|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-08 14:35:48.126|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@344344fa: startup date [Fri Mar 08 14:35:48 CST 2019]; root of context hierarchy
2019-03-08 14:35:48.411|INFO|org.hibernate.validator.internal.util.Version|background-preinit|<clinit>|30|HV000001: Hibernate Validator 5.3.6.Final
2019-03-08 14:35:48.601|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-08 14:35:48.673|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$18fb6572] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 14:35:49.078|INFO|org.springframework.boot.SpringApplication|main|logStartupProfileInfo|593|No active profile set, falling back to default profiles: default
2019-03-08 14:35:49.097|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3effd4f3: startup date [Fri Mar 08 14:35:49 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@344344fa
2019-03-08 14:35:50.644|INFO|org.springframework.data.repository.config.RepositoryConfigurationDelegate|main|multipleStoresDetected|165|Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-08 14:35:50.909|INFO|com.ctrip.framework.foundation.internals.provider.DefaultApplicationProvider|main|initAppId|93|App ID is set to jm-relationship-service-v1 by app.id property from /META-INF/app.properties
2019-03-08 14:35:50.911|INFO|com.ctrip.framework.foundation.internals.provider.DefaultServerProvider|main|initEnvType|108|Environment is set to [dev] by JVM system property 'env'.
2019-03-08 14:35:51.084|INFO|org.springframework.cloud.context.scope.GenericScope|main|setSerializationId|288|BeanFactory id=a28870a0-6643-3746-9c13-9ffdb32f2a03
2019-03-08 14:35:51.168|INFO|com.ctrip.framework.apollo.internals.DefaultMetaServerProvider|main|initMetaServerAddress|42|Located meta services from apollo.meta configuration: http://172.16.175.22:8080!
2019-03-08 14:35:51.171|INFO|com.ctrip.framework.apollo.core.MetaDomainConsts|main|initMetaServerAddress|93|Located meta server address http://172.16.175.22:8080 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-08 14:35:51.308|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-08 14:35:51.400|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmAppUserFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 14:35:51.402|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'com.sunfield.microframe.feign.JmIndustriesFeignService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 14:35:51.588|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fce16275] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 14:35:51.802|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'redisConfig' of type [com.sunfield.microframe.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c9a23e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 14:35:51.814|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$45f39893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 14:35:51.872|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$2f0e08b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 14:35:51.902|INFO|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker|main|postProcessAfterInitialization|327|Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$18fb6572] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-08 14:35:52.413|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|initialize|89|Tomcat initialized with port(s): 18089 (http)
2019-03-08 14:35:52.423|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting service [Tomcat]
2019-03-08 14:35:52.424|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting Servlet Engine: Apache Tomcat/8.5.27
2019-03-08 14:35:52.689|INFO|org.apache.juli.logging.DirectJDKLog|localhost-startStop-1|log|180|Initializing Spring embedded WebApplicationContext
2019-03-08 14:35:52.689|INFO|org.springframework.boot.context.embedded.EmbeddedWebApplicationContext|localhost-startStop-1|prepareEmbeddedWebApplicationContext|276|Root WebApplicationContext: initialization completed in 3592 ms
2019-03-08 14:35:53.226|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'statViewServlet' to [/druid/*]
2019-03-08 14:35:53.228|INFO|org.springframework.boot.web.servlet.ServletRegistrationBean|localhost-startStop-1|onStartup|190|Mapping servlet: 'dispatcherServlet' to [/]
2019-03-08 14:35:53.232|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'metricsFilter' to: [/*]
2019-03-08 14:35:53.232|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-08 14:35:53.232|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-08 14:35:53.232|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-08 14:35:53.233|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'requestContextFilter' to: [/*]
2019-03-08 14:35:53.233|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019-03-08 14:35:53.233|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|271|Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-08 14:35:53.233|INFO|org.springframework.boot.web.servlet.AbstractFilterRegistrationBean|localhost-startStop-1|configure|258|Mapping filter: 'applicationContextIdFilter' to: [/*]
2019-03-08 14:35:53.737|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [protected final void com.alibaba.druid.pool.DruidDataSource.handleFatalError(com.alibaba.druid.pool.DruidPooledConnection,java.sql.SQLException,java.lang.String) throws java.sql.SQLException] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-08 14:35:53.738|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.decrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-08 14:35:53.739|INFO|org.springframework.aop.framework.CglibAopProxy|main|doValidateClass|268|Final method [private final void com.alibaba.druid.pool.DruidDataSource.incrementPoolingCount()] cannot get proxied via CGLIB: Calls to this method will NOT be routed to the target instance and might lead to NPEs against uninitialized fields in the proxy instance.
2019-03-08 14:35:54.076|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2b19b346: startup date [Fri Mar 08 14:35:54 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3effd4f3
2019-03-08 14:35:54.098|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-08 14:35:54.842|INFO|org.springframework.context.support.AbstractApplicationContext|main|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6556471b: startup date [Fri Mar 08 14:35:54 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3effd4f3
2019-03-08 14:35:54.861|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|main|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-08 14:35:55.519|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.update(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.520|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.521|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.521|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.522|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.522|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.523|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesList],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesList(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.523|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOne(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.523|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findOnesPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findOnesPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.524|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/findSelfPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipFriendlife>> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.findSelfPage(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.524|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipFriendlife/deleteSelf],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendlife> com.sunfield.microframe.rest.JmRelationshipFriendlifeRest.deleteSelf(com.sunfield.microframe.domain.JmRelationshipFriendlife)
2019-03-08 14:35:55.525|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupReject],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupReject(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-08 14:35:55.526|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupRequest(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-08 14:35:55.527|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroupRequest/groupAgreed],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroupRequest> com.sunfield.microframe.rest.JmRelationshipGroupRequestRest.groupAgreed(com.sunfield.microframe.domain.JmRelationshipGroupRequest)
2019-03-08 14:35:55.531|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/update],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.update(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.531|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.delete(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.532|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.532|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.532|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupAdd],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupAdd(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.533|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupOut],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupOut(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.533|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.534|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findOne],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.findOne(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.534|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyListPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyListPage(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.534|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMyList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmRelationshipGroup>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMyList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.535|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/findMemberList],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.JmRelationshipGroupRest.findMemberList(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.535|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipGroup/groupCreate],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipGroup> com.sunfield.microframe.rest.JmRelationshipGroupRest.groupCreate(com.sunfield.microframe.domain.JmRelationshipGroup)
2019-03-08 14:35:55.536|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/delete],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.delete(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-08 14:35:55.537|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationshipUserFriendlife/insert],methods=[POST]}" onto public com.sunfield.microframe.common.response.ResponseBean<com.sunfield.microframe.domain.JmRelationshipUserFriendlife> com.sunfield.microframe.rest.JmRelationshipUserFriendlifeRest.insert(com.sunfield.microframe.domain.JmRelationshipUserFriendlife)
2019-03-08 14:35:55.538|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/rejectFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.rejectFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 14:35:55.539|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsite],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsite(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 14:35:55.539|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRequestsOppsitePage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendRequestsOppsitePage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 14:35:55.540|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationship],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationship(com.sunfield.microframe.domain.JmAppUser)
2019-03-08 14:35:55.540|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/industryRelationshipPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.industryRelationshipPage(com.sunfield.microframe.domain.JmAppUser)
2019-03-08 14:35:55.541|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/removeFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.removeFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 14:35:55.541|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/agreeAsAFriend],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.agreeAsAFriend(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 14:35:55.541|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/addFriendRequest],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.addFriendRequest(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 14:35:55.542|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendRecord],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.domain.JmRelationshipFriendship> com.sunfield.microframe.rest.RelationshipController.findFriendRecord(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 14:35:55.544|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriends],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<java.util.List<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriends(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 14:35:55.544|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/JmRelationship/findFriendsPage],methods=[POST]}" onto public com.sunfield.microframe.common.response.RelationshipResponseBean<com.sunfield.microframe.common.response.Page<com.sunfield.microframe.domain.JmAppUser>> com.sunfield.microframe.rest.RelationshipController.findFriendsPage(com.sunfield.microframe.domain.JmRelationshipFriendship)
2019-03-08 14:35:55.548|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-08 14:35:55.548|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-08 14:35:55.549|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-08 14:35:55.552|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-08 14:35:55.553|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-08 14:35:55.606|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-08 14:35:55.607|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-08 14:35:55.611|INFO|com.netflix.config.DynamicPropertyFactory|main|getInstance|281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@61d61b0e
2019-03-08 14:35:56.774|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019-03-08 14:35:56.775|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.775|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019-03-08 14:35:56.776|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019-03-08 14:35:56.776|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019-03-08 14:35:56.777|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.777|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.779|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019-03-08 14:35:56.780|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019-03-08 14:35:56.780|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.780|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019-03-08 14:35:56.781|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019-03-08 14:35:56.781|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.782|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019-03-08 14:35:56.783|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019-03-08 14:35:56.784|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-03-08 14:35:56.785|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.786|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.786|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.787|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.788|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019-03-08 14:35:56.788|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.789|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:56.789|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019-03-08 14:35:56.790|INFO|org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry|main|register|543|Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019-03-08 14:35:57.062|INFO|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping|main|initHandlerMethods|69|Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-08 14:35:57.332|WARN|com.netflix.config.sources.URLConfigurationSource|main|<init>|121|No URLs will be polled as dynamic configuration sources.
2019-03-08 14:35:57.332|INFO|com.netflix.config.sources.URLConfigurationSource|main|<init>|122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-08 14:35:57.603|INFO|org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter|main|initControllerAdviceCache|534|Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3effd4f3: startup date [Fri Mar 08 14:35:49 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@344344fa
2019-03-08 14:35:57.714|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-08 14:35:57.715|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-08 14:35:57.820|INFO|org.springframework.web.servlet.handler.AbstractUrlHandlerMapping|main|registerHandler|362|Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-08 14:35:58.586|INFO|org.springframework.ui.freemarker.SpringTemplateLoader|main|<init>|61|SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3effd4f3: startup date [Fri Mar 08 14:35:49 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@344344fa] and template loader path [classpath:/templates/]
2019-03-08 14:35:58.587|INFO|org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer|main|postProcessTemplateLoaders|127|ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-08 14:35:59.273|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-08 14:35:59.275|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'druidDataSource' has been autodetected for JMX exposure
2019-03-08 14:35:59.291|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-03-08 14:35:59.292|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019-03-08 14:35:59.292|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-03-08 14:35:59.293|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019-03-08 14:35:59.294|INFO|org.springframework.jmx.export.MBeanExporter|main|autodetect|916|Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-03-08 14:35:59.298|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-03-08 14:35:59.314|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019-03-08 14:35:59.322|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-03-08 14:35:59.338|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3effd4f3,type=ConfigurationPropertiesRebinder]
2019-03-08 14:35:59.345|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019-03-08 14:35:59.351|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|671|Located MBean 'druidDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=druidDataSource,type=DruidDataSource]
2019-03-08 14:35:59.377|INFO|org.springframework.jmx.export.MBeanExporter|main|afterSingletonsInstantiated|431|Registering beans for JMX exposure on startup
2019-03-08 14:35:59.393|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 0
2019-03-08 14:35:59.401|INFO|org.springframework.cloud.netflix.eureka.InstanceInfoFactory|main|create|71|Setting initial instance status as: STARTING
2019-03-08 14:35:59.433|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|347|Initializing Eureka in region us-east-1
2019-03-08 14:35:59.671|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|70|Using JSON encoding codec LegacyJacksonJson
2019-03-08 14:35:59.671|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|71|Using JSON decoding codec LegacyJacksonJson
2019-03-08 14:35:59.797|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|80|Using XML encoding codec XStreamXml
2019-03-08 14:35:59.797|INFO|com.netflix.discovery.provider.DiscoveryJerseyProvider|main|<init>|81|Using XML decoding codec XStreamXml
2019-03-08 14:36:00.106|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|main|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-08 14:36:00.148|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|934|Disable delta property : false
2019-03-08 14:36:00.149|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|935|Single vip registry refresh property : null
2019-03-08 14:36:00.149|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|936|Force full registry fetch : false
2019-03-08 14:36:00.149|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|937|Application is null : false
2019-03-08 14:36:00.149|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|938|Registered Applications size is zero : true
2019-03-08 14:36:00.150|INFO|com.netflix.discovery.DiscoveryClient|main|fetchRegistry|940|Application version is -1: true
2019-03-08 14:36:00.150|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1023|Getting all instance registry info from the eureka server
2019-03-08 14:36:00.323|INFO|com.netflix.discovery.DiscoveryClient|main|getAndStoreFullRegistry|1032|The response status is 200
2019-03-08 14:36:00.324|INFO|com.netflix.discovery.DiscoveryClient|main|initScheduledTasks|1258|Starting heartbeat executor: renew interval is: 30
2019-03-08 14:36:00.326|INFO|com.netflix.discovery.InstanceInfoReplicator|main|<init>|59|InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-08 14:36:00.329|INFO|com.netflix.discovery.DiscoveryClient|main|<init>|434|Discovery Client initialized at timestamp 1552026960329 with initial instances count: 19
2019-03-08 14:36:00.352|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry|main|register|40|Registering application jm-relationship-service with eureka with status UP
2019-03-08 14:36:00.353|INFO|com.netflix.discovery.DiscoveryClient$3|main|notify|1293|Saw local status change event StatusChangeEvent [timestamp=1552026960353, current=UP, previous=STARTING]
2019-03-08 14:36:00.355|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|804|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:18089: registering service...
2019-03-08 14:36:00.359|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019-03-08 14:36:00.374|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019-03-08 14:36:00.386|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019-03-08 14:36:00.390|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019-03-08 14:36:00.393|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-InstanceInfoReplicator-0|register|813|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:18089 - registration status: 204
2019-03-08 14:36:00.393|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019-03-08 14:36:00.396|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019-03-08 14:36:00.398|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019-03-08 14:36:00.401|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019-03-08 14:36:00.405|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019-03-08 14:36:00.412|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019-03-08 14:36:00.415|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019-03-08 14:36:00.417|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019-03-08 14:36:00.421|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019-03-08 14:36:00.423|INFO|org.springframework.jmx.export.MBeanExporter|main|registerBeanInstance|678|Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019-03-08 14:36:00.424|INFO|org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup|main|start|343|Starting beans in phase 2147483647
2019-03-08 14:36:00.424|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|151|Context refreshed
2019-03-08 14:36:00.433|INFO|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper|main|start|154|Found 1 custom documentation plugin(s)
2019-03-08 14:36:00.465|INFO|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner|main|scan|41|Scanning for api listing references
2019-03-08 14:36:00.803|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_1
2019-03-08 14:36:00.816|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findListUsingPOST_1
2019-03-08 14:36:00.862|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findOneUsingPOST_1
2019-03-08 14:36:00.865|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: findPageUsingPOST_1
2019-03-08 14:36:00.873|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: updateUsingPOST_1
2019-03-08 14:36:00.891|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: deleteUsingPOST_2
2019-03-08 14:36:00.893|INFO|springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator|main|startingWith|40|Generating unique operation named: insertUsingPOST_1
2019-03-08 14:36:00.947|INFO|org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration|main|start|138|Starting poller
2019-03-08 14:36:00.973|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Initializing ProtocolHandler ["http-nio-18089"]
2019-03-08 14:36:00.981|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Starting ProtocolHandler ["http-nio-18089"]
2019-03-08 14:36:00.994|INFO|org.apache.juli.logging.DirectJDKLog|main|log|180|Using a shared selector for servlet write/read
2019-03-08 14:36:01.281|INFO|org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer|main|start|201|Tomcat started on port(s): 18089 (http)
2019-03-08 14:36:01.282|INFO|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration|main|onApplicationEvent|124|Updating port to 18089
2019-03-08 14:36:01.282|INFO|com.codingapi.tx.springcloud.listener.ServerListener|main|onApplicationEvent|24|onApplicationEvent -> onApplicationEvent. org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer@4d20d8e6
2019-03-08 14:36:01.286|INFO|com.codingapi.tx.netty.service.TxManagerHttpRequestHelper|main|reloadHttpRequestService|47|load HttpRequestService .
2019-03-08 14:36:01.287|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|18|httpGet start
2019-03-08 14:36:01.793|INFO|com.sunfield.microframe.common.config.TxManagerHttpRequestServiceImpl|main|httpGet|20|httpGet end,res is {"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-08 14:36:01.794|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|43|get txManager ->{"ip":"172.16.175.24","port":9999,"heart":15,"delay":5,"compensateMaxWaitTime":5000}

2019-03-08 14:36:01.798|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|57|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-08 14:36:01.798|INFO|com.codingapi.tx.netty.service.impl.NettyDistributeServiceImpl|main|getTxServer|59|host:172.16.175.24,port:9999,heart:15,delay:5,compensateMaxWaitTime:5000
2019-03-08 14:36:01.907|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|main|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-08 14:36:01.941|INFO|com.codingapi.tx.listener.service.impl.InitServiceImpl|main|start|25|socket-start..
2019-03-08 14:36:01.948|INFO|org.springframework.boot.StartupInfoLogger|main|logStarted|57|Started ServiceApplication in 14.45 seconds (JVM running for 16.375)
2019-03-08 14:36:01.955|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-2-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@379b784a
2019-03-08 14:36:04.579|INFO|com.alibaba.druid.pool.DruidDataSource|RMI TCP Connection(4)-127.0.0.1|init|947|{dataSource-1} inited
2019-03-08 14:36:06.984|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-1|sleepSend|84|send-msg->{"a":"umi","k":"j8H1qDeY","p":{"u":"286bae9563235576a14a2ae8fdd7215a","i":"192.168.4.152:18089","m":"jm-relationship-service"}}
2019-03-08 14:37:07.681|INFO|org.apache.juli.logging.DirectJDKLog|http-nio-18089-exec-2|log|180|Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-08 14:37:07.682|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-18089-exec-2|initServletBean|489|FrameworkServlet 'dispatcherServlet': initialization started
2019-03-08 14:37:07.785|INFO|org.springframework.web.servlet.FrameworkServlet|http-nio-18089-exec-2|initServletBean|508|FrameworkServlet 'dispatcherServlet': initialization completed in 103 ms
2019-03-08 14:37:36.483|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-18089-exec-9|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#agreeAsAFriend PARAMS:[{"createBy":null,"createDate":null,"id":null,"pageNumber":0,"pageSize":0,"remarks":null,"reverse":false,"status":null,"type":4,"updateBy":null,"updateDate":null,"userId":"bc4b078c1d6d484bbf4eba1aea6b1596","userIdOpposite":"4f57a264a581421eb5571ab473bc31c8"}]
2019-03-08 14:37:36.650|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-9|debug|145|==>  Preparing: UPDATE jm_relationship_friendship SET type = ?, update_by = ?, update_date = ?, remarks = ? WHERE (user_id = ?) AND (user_id_opposite = ?) AND (status = '0') 
2019-03-08 14:37:36.719|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-9|debug|145|==> Parameters: 0(Integer), null, 2019-03-08 14:37:36.587(Timestamp), null, 4f57a264a581421eb5571ab473bc31c8(String), bc4b078c1d6d484bbf4eba1aea6b1596(String)
2019-03-08 14:37:36.775|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-9|debug|145|<==    Updates: 1
2019-03-08 14:37:36.782|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-9|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (user_id_opposite = ?) AND (status = '0') ORDER BY type limit 0,1 
2019-03-08 14:37:36.790|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-9|debug|145|==> Parameters: bc4b078c1d6d484bbf4eba1aea6b1596(String), 4f57a264a581421eb5571ab473bc31c8(String)
2019-03-08 14:37:36.837|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-9|debug|145|<==      Total: 0
2019-03-08 14:37:36.841|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-9|debug|145|==>  Preparing: INSERT INTO jm_relationship_friendship (id, type, user_id, user_id_opposite, status, create_by, create_date, update_by, update_date, remarks) VALUES (?, ?, ?, ?, 0, ?, ?, ?, ?, ?) 
2019-03-08 14:37:36.852|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-9|debug|145|==> Parameters: b26e5149fa6f430b85e22df33993fc33(String), 0(Integer), bc4b078c1d6d484bbf4eba1aea6b1596(String), 4f57a264a581421eb5571ab473bc31c8(String), null, 2019-03-08 14:37:36.584(Timestamp), null, 2019-03-08 14:37:36.584(Timestamp), null
2019-03-08 14:37:36.907|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-9|debug|145|<==    Updates: 1
2019-03-08 14:37:37.168|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|hystrix-jm-user-service-1|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-08 14:37:37.204|INFO|org.springframework.context.support.AbstractApplicationContext|hystrix-jm-user-service-1|prepareRefresh|583|Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3a1c3633: startup date [Fri Mar 08 14:37:37 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3effd4f3
2019-03-08 14:37:37.280|INFO|org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor|hystrix-jm-user-service-1|<init>|155|JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-03-08 14:37:37.539|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|hystrix-jm-user-service-1|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-08 14:37:37.578|INFO|com.netflix.util.concurrent.ShutdownEnabledTimer|hystrix-jm-user-service-1|<init>|58|Shutdown hook installed for: NFLoadBalancer-PingTimer-jm-user-service
2019-03-08 14:37:37.589|INFO|com.netflix.loadbalancer.BaseLoadBalancer|hystrix-jm-user-service-1|initWithConfig|192|Client: jm-user-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-user-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-08 14:37:37.604|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|hystrix-jm-user-service-1|enableAndInitLearnNewServersFeature|222|Using serverListUpdater PollingServerListUpdater
2019-03-08 14:37:37.621|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|hystrix-jm-user-service-1|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-08 14:37:37.623|INFO|com.netflix.loadbalancer.DynamicServerListLoadBalancer|hystrix-jm-user-service-1|restOfInit|150|DynamicServerListLoadBalancer for client jm-user-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=jm-user-service,current list of Servers=[172.16.175.24:9200, 192.168.4.113:9200],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:172.16.175.24:9200;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:192.168.4.113:9200;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@442647cc
2019-03-08 14:37:37.821|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|hystrix-jm-user-service-1|chooseServer|28|enter chooseServer method, key:null
2019-03-08 14:37:37.973|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|hystrix-jm-user-service-2|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-08 14:37:37.974|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|hystrix-jm-user-service-2|chooseServer|28|enter chooseServer method, key:null
2019-03-08 14:37:38.248|INFO|com.sunfield.microframe.rest.RelationshipController|http-nio-18089-exec-9|agreeAsAFriend|91|系统异常：null
2019-03-08 14:37:38.257|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-18089-exec-9|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#agreeAsAFriend RETURN:{"data":null,"msg":"系统繁忙","relationshipResponseStatus":"BUSY","status":"BUSY"} COST TIME:1766ms
2019-03-08 14:37:38.609|INFO|com.netflix.config.ChainedDynamicProperty$ChainLink|PollingServerListUpdater-0|checkAndFlip|115|Flipping property: jm-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-08 14:38:11.128|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-18089-exec-10|beforeRest|36|==> START REST: com.sunfield.microframe.rest.RelationshipController#agreeAsAFriend PARAMS:[{"createBy":null,"createDate":null,"id":null,"pageNumber":0,"pageSize":0,"remarks":null,"reverse":false,"status":null,"type":4,"updateBy":null,"updateDate":null,"userId":"bc4b078c1d6d484bbf4eba1aea6b1596","userIdOpposite":"4f57a264a581421eb5571ab473bc31c8"}]
2019-03-08 14:38:37.524|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-2-1|channelInactive|74|disconnection  -->io.netty.channel.DefaultChannelHandlerContext@379b784a
2019-03-08 14:38:37.579|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-10|debug|145|==>  Preparing: UPDATE jm_relationship_friendship SET type = ?, update_by = ?, update_date = ?, remarks = ? WHERE (user_id = ?) AND (user_id_opposite = ?) AND (status = '0') 
2019-03-08 14:38:37.588|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-10|debug|145|==> Parameters: 0(Integer), null, 2019-03-08 14:38:37.576(Timestamp), null, 4f57a264a581421eb5571ab473bc31c8(String), bc4b078c1d6d484bbf4eba1aea6b1596(String)
2019-03-08 14:38:37.646|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-10|debug|145|<==    Updates: 1
2019-03-08 14:38:37.652|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-10|debug|145|==>  Preparing: SELECT id AS id, user_id AS userId, user_id_opposite AS userIdOpposite, type AS type, status AS status, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks AS remarks FROM jm_relationship_friendship WHERE (user_id = ?) AND (user_id_opposite = ?) AND (status = '0') ORDER BY type limit 0,1 
2019-03-08 14:38:37.661|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-10|debug|145|==> Parameters: bc4b078c1d6d484bbf4eba1aea6b1596(String), 4f57a264a581421eb5571ab473bc31c8(String)
2019-03-08 14:38:37.695|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-10|debug|145|<==      Total: 0
2019-03-08 14:38:37.699|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-10|debug|145|==>  Preparing: INSERT INTO jm_relationship_friendship (id, type, user_id, user_id_opposite, status, create_by, create_date, update_by, update_date, remarks) VALUES (?, ?, ?, ?, 0, ?, ?, ?, ?, ?) 
2019-03-08 14:38:37.709|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-10|debug|145|==> Parameters: 7ff1442155e347f8af11f99af7a4c504(String), 0(Integer), bc4b078c1d6d484bbf4eba1aea6b1596(String), 4f57a264a581421eb5571ab473bc31c8(String), null, 2019-03-08 14:38:37.575(Timestamp), null, 2019-03-08 14:38:37.575(Timestamp), null
2019-03-08 14:38:37.767|DEBUG|org.apache.ibatis.logging.jdbc.BaseJdbcLogger|http-nio-18089-exec-10|debug|145|<==    Updates: 1
2019-03-08 14:38:37.770|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|hystrix-jm-user-service-3|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-08 14:38:37.770|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|hystrix-jm-user-service-3|chooseServer|28|enter chooseServer method, key:null
2019-03-08 14:38:38.316|INFO|com.codingapi.tx.springcloud.feign.TransactionRestTemplateInterceptor|hystrix-jm-user-service-4|apply|23|LCN-SpringCloud TxGroup info -> groupId:null
2019-03-08 14:38:38.317|INFO|com.codingapi.ribbon.loadbalancer.LcnZoneAwareLoadBalancerProxy|hystrix-jm-user-service-4|chooseServer|28|enter chooseServer method, key:null
2019-03-08 14:38:58.169|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|nioEventLoopGroup-2-1|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-08 14:38:58.179|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-3-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@41cd88ee
2019-03-08 14:45:32.345|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-3-1|channelInactive|74|disconnection  -->io.netty.channel.DefaultChannelHandlerContext@41cd88ee
2019-03-08 14:45:32.362|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
2019-03-08 14:45:32.363|INFO|com.sunfield.microframe.rest.RelationshipController|http-nio-18089-exec-10|agreeAsAFriend|91|系统异常：null
2019-03-08 14:45:32.363|INFO|com.sunfield.microframe.common.aop.RestAop|http-nio-18089-exec-10|beforeRest|42|<== END REST: com.sunfield.microframe.rest.RelationshipController#agreeAsAFriend RETURN:{"data":null,"msg":"系统繁忙","relationshipResponseStatus":"BUSY","status":"BUSY"} COST TIME:441234ms
2019-03-08 14:45:32.408|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-HeartbeatExecutor-0|renew|828|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:18089 - Re-registering apps/JM-RELATIONSHIP-SERVICE
2019-03-08 14:45:32.409|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-HeartbeatExecutor-0|register|804|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:18089: registering service...
2019-03-08 14:45:32.414|INFO|com.netflix.discovery.DiscoveryClient|DiscoveryClient-HeartbeatExecutor-0|register|813|DiscoveryClient_JM-RELATIONSHIP-SERVICE/192.168.4.152:18089 - registration status: 204
2019-03-08 14:45:35.367|INFO|com.codingapi.tx.netty.service.impl.NettyServiceImpl|nioEventLoopGroup-3-1|start|85|connection txManager-socket-> host:172.16.175.24,port:9999
2019-03-08 14:45:35.372|INFO|com.codingapi.tx.netty.handler.TransactionHandler|nioEventLoopGroup-4-1|channelActive|87|connection -->io.netty.channel.DefaultChannelHandlerContext@18b503fd
2019-03-08 14:45:40.376|INFO|com.codingapi.tx.framework.utils.SocketManager|pool-11-thread-2|sleepSend|84|send-msg->{"a":"umi","k":"Juw5WipY","p":{"u":"286bae9563235576a14a2ae8fdd7215a","i":"192.168.4.152:18089","m":"jm-relationship-service"}}
2019-03-08 14:50:32.365|INFO|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver|AsyncResolver-bootstrap-executor-0|getClusterEndpoints|43|Resolving eureka endpoints via configuration
